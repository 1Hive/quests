{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aragonGovernAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "questAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_requirements",
          "type": "bytes"
        }
      ],
      "name": "QuestCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aragonGovernAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_requirements",
          "type": "bytes"
        },
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_fundsRecoveryAddress",
          "type": "address"
        }
      ],
      "name": "createQuest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xafa3a35837507d1077bf54a602e275d6e06b75d6fe48a3c59a3b6998643151e3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1042974",
    "logsBloom": "0x
    "blockHash": "0xa1e6b9818a464e40e145555b15a76d55f5415f078db813272f87a91ed9c636ae",
    "transactionHash": "0xafa3a35837507d1077bf54a602e275d6e06b75d6fe48a3c59a3b6998643151e3",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1042974",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
  ],
  "solcInputHash": "670cd19a11d127915defe6549f5f8d37",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aragonGovernAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"questAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_requirements\",\"type\":\"bytes\"}],\"name\":\"QuestCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aragonGovernAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_requirements\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_fundsRecoveryAddress\",\"type\":\"address\"}],\"name\":\"createQuest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuestFactory.sol\":\"QuestFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"contracts/Quest.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\n\\r\\n\\r\\ncontract Quest {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    struct Claim {\\r\\n        bytes evidence;\\r\\n        address player;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    bytes public requirements;\\r\\n    IERC20 public rewardToken;\\r\\n    uint256 public expireTime;\\r\\n    address public aragonGovernAddress;\\r\\n    address payable public fundsRecoveryAddress;\\r\\n    Claim[] public claims;\\r\\n\\r\\n    event QuestClaimed(bytes evidence, address player, uint256 amount);\\r\\n\\r\\n    constructor(\\r\\n        bytes memory _requirements,\\r\\n        IERC20 _rewardToken,\\r\\n        uint256 _expireTime,\\r\\n        address _aragonGovernAddress,\\r\\n        address payable _fundsRecoveryAddress\\r\\n    ) {\\r\\n        requirements = _requirements;\\r\\n        rewardToken = _rewardToken;\\r\\n        expireTime = _expireTime;\\r\\n        aragonGovernAddress = _aragonGovernAddress;\\r\\n        fundsRecoveryAddress = _fundsRecoveryAddress;\\r\\n    }\\r\\n\\r\\n    function recoverUnclaimedFunds() external {\\r\\n        require(block.timestamp > expireTime, \\\"ERROR: Not expired\\\");\\r\\n        rewardToken.safeTransfer(fundsRecoveryAddress, rewardToken.balanceOf(address(this)));\\r\\n    }\\r\\n\\r\\n    function claim(bytes memory _evidence, address _player, uint256 _amount) external {\\r\\n        require(msg.sender == aragonGovernAddress, \\\"ERROR: Sender not govern\\\");\\r\\n        require(_evidence.length != 0, \\\"ERROR: No evidence\\\");\\r\\n\\r\\n        if (_amount > 0) {\\r\\n            rewardToken.safeTransfer(_player, _amount);\\r\\n        } else if (_amount == 0) {\\r\\n            rewardToken.safeTransfer(_player, rewardToken.balanceOf(address(this)));\\r\\n        }\\r\\n\\r\\n        claims.push(Claim(_evidence, _player, _amount));\\r\\n\\r\\n        emit QuestClaimed(_evidence, _player, _amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf774f563ef087a9395c72e6f9b5f874b40f0384374f08eea579327a88d946018\",\"license\":\"GPL-3.0\"},\"contracts/QuestFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./Quest.sol\\\";\\r\\n\\r\\n\\r\\ncontract QuestFactory {\\r\\n\\r\\n    address public aragonGovernAddress;\\r\\n\\r\\n    event QuestCreated(address questAddress, bytes _requirements);\\r\\n\\r\\n    constructor(address _aragonGovernAddress) {\\r\\n        aragonGovernAddress = _aragonGovernAddress;\\r\\n    }\\r\\n\\r\\n    function createQuest(\\r\\n        bytes memory _requirements,\\r\\n        IERC20 _rewardToken,\\r\\n        uint256 _expireTime,\\r\\n        address payable _fundsRecoveryAddress\\r\\n    )\\r\\n        external\\r\\n    {\\r\\n        Quest quest = new Quest(_requirements, _rewardToken, _expireTime, aragonGovernAddress, _fundsRecoveryAddress);\\r\\n        emit QuestCreated(address(quest), _requirements);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0fe13515e7a81f8cb191d9a6895848ab6a8fb6d741a2e730cbc7c58382c189ce\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161120b38038061120b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61117a806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b0a87ac11461003b578063c221a3f414610059575b600080fd5b61004361006e565b604051610050919061024c565b60405180910390f35b61006c610067366004610135565b61007d565b005b6000546001600160a01b031681565b600080546040518691869186916001600160a01b031690869061009f9061010c565b6100ad95949392919061028c565b604051809103906000f0801580156100c9573d6000803e3d6000fd5b5090507fc1c0adb5f3d23903a15d7db0b842db176ec2a00eaa4c7ceed0ada27726aa88f081866040516100fd929190610260565b60405180910390a15050505050565b610e5d806102e883390190565b80356001600160a01b038116811461013057600080fd5b919050565b6000806000806080858703121561014a578384fd5b843567ffffffffffffffff80821115610161578586fd5b818701915087601f830112610174578586fd5b8135602082821115610188576101886102d1565b604051601f8301601f19168101820184811182821017156101ab576101ab6102d1565b60405282815284830182018b10156101c1578889fd5b82828601838301378083018201989098526101dd898201610119565b965050505050604085013591506101f660608601610119565b905092959194509250565b60008151808452815b818110156102265760208185018101518683018201520161020a565b818111156102375782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038316815260406020820181905260009061028490830184610201565b949350505050565b600060a0825261029f60a0830188610201565b6001600160a01b0396871660208401526040830195909552509184166060830152909216608090920191909152919050565b634e487b7160e01b600052604160045260246000fdfe60806040523480156200001157600080fd5b5060405162000e5d38038062000e5d833981016040819052620000349162000157565b84516200004990600090602088019062000094565b50600180546001600160a01b039586166001600160a01b03199182161790915560029390935560038054928516928416929092179091556004805491909316911617905550620002bd565b828054620000a2906200026a565b90600052602060002090601f016020900481019282620000c6576000855562000111565b82601f10620000e157805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000111578251825591602001919060010190620000f4565b506200011f92915062000123565b5090565b5b808211156200011f576000815560010162000124565b80516001600160a01b03811681146200015257600080fd5b919050565b600080600080600060a086880312156200016f578081fd5b85516001600160401b038082111562000186578283fd5b818801915088601f8301126200019a578283fd5b815181811115620001af57620001af620002a7565b6040516020601f8301601f1916820181018481118382101715620001d757620001d7620002a7565b60405282825284830181018c1015620001ee578586fd5b8593505b82841015620002115784840181015182850182015292830192620001f2565b828411156200022257858184840101525b81995062000232818c016200013a565b98505050505050604086015192506200024e606087016200013a565b91506200025e608087016200013a565b90509295509295909350565b6002810460018216806200027f57607f821691505b60208210811415620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610b9080620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a51b4b651161005b578063a51b4b65146100dd578063a888c2cd146100f2578063b0a87ac114610114578063f7c618c11461011c57610088565b8063310a1ee31461008d5780634621d082146100ab5780637ceae310146100b557806399b44ba0146100ca575b600080fd5b610095610124565b6040516100a29190610ad0565b60405180910390f35b6100b361012a565b005b6100bd6101f3565b6040516100a2919061090c565b6100b36100d83660046107d8565b610202565b6100e561038a565b6040516100a29190610939565b610105610100366004610894565b610418565b6040516100a29392919061094c565b6100bd6104e4565b6100bd6104f3565b60025481565b60025442116101545760405162461bcd60e51b815260040161014b906109c0565b60405180910390fd5b600480546001546040516370a0823160e01b81526101f1936001600160a01b0393841693909216916370a082319161018e9130910161090c565b60206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906108ac565b6001546001600160a01b03169190610502565b565b6004546001600160a01b031681565b6003546001600160a01b0316331461022c5760405162461bcd60e51b815260040161014b906109ec565b825161024a5760405162461bcd60e51b815260040161014b90610a5a565b801561026c57600154610267906001600160a01b03168383610502565b6102a7565b806102a7576001546040516370a0823160e01b81526102a79184916001600160a01b03909116906370a082319061018e90309060040161090c565b604080516060810182528481526001600160a01b0384166020808301919091529181018390526005805460018101825560009190915281518051929360039092027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001926103189284920190610708565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517fa1c3b325aa2c115e4b244062eba2515bc5585ae5b41556be8fef399ae9fde11b9061037d9085908590859061094c565b60405180910390a1505050565b6000805461039790610b09565b80601f01602080910402602001604051908101604052809291908181526020018280546103c390610b09565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b505050505081565b6005818154811061042857600080fd5b906000526020600020906003020160009150905080600001805461044b90610b09565b80601f016020809104026020016040519081016040528092919081815260200182805461047790610b09565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b6003546001600160a01b031681565b6001546001600160a01b031681565b6105588363a9059cbb60e01b8484604051602401610521929190610920565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261055d565b505050565b60006105b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105ec9092919063ffffffff16565b80519091501561055857808060200190518101906105d091906107b8565b6105585760405162461bcd60e51b815260040161014b90610a86565b60606105fb8484600085610605565b90505b9392505050565b6060824710156106275760405162461bcd60e51b815260040161014b9061097a565b610630856106c5565b61064c5760405162461bcd60e51b815260040161014b90610a23565b600080866001600160a01b0316858760405161066891906108f0565b60006040518083038185875af1925050503d80600081146106a5576040519150601f19603f3d011682016040523d82523d6000602084013e6106aa565b606091505b50915091506106ba8282866106cf565b979650505050505050565b803b15155b919050565b606083156106de5750816105fe565b8251156106ee5782518084602001fd5b8160405162461bcd60e51b815260040161014b9190610939565b82805461071490610b09565b90600052602060002090601f016020900481019282610736576000855561077c565b82601f1061074f57805160ff191683800117855561077c565b8280016001018555821561077c579182015b8281111561077c578251825591602001919060010190610761565b5061078892915061078c565b5090565b5b80821115610788576000815560010161078d565b80356001600160a01b03811681146106ca57600080fd5b6000602082840312156107c9578081fd5b815180151581146105fe578182fd5b6000806000606084860312156107ec578182fd5b833567ffffffffffffffff80821115610803578384fd5b818601915086601f830112610816578384fd5b813560208282111561082a5761082a610b44565b604051601f8301601f191681018201848111828210171561084d5761084d610b44565b60405282815284830182018a1015610863578687fd5b8282860183830137808301820187905296506108808882016107a1565b955050505050604084013590509250925092565b6000602082840312156108a5578081fd5b5035919050565b6000602082840312156108bd578081fd5b5051919050565b600081518084526108dc816020860160208601610ad9565b601f01601f19169290920160200192915050565b60008251610902818460208701610ad9565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6000602082526105fe60208301846108c4565b60006060825261095f60608301866108c4565b6001600160a01b039490941660208301525060400152919050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526012908201527111549493d48e88139bdd08195e1c1a5c995960721b604082015260600190565b60208082526018908201527f4552524f523a2053656e646572206e6f7420676f7665726e0000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152714552524f523a204e6f2065766964656e636560701b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b83811015610af4578181015183820152602001610adc565b83811115610b03576000848401525b50505050565b600281046001821680610b1d57607f821691505b60208210811415610b3e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c8ad43dc6900bb9abd03a4b71927382880fa48be941067e05a067a62ed30b70264736f6c63430008000033a2646970667358221220ab32f24ca5ae5bb9c0a04ad2812bee88213d7e54068be324e3d96b1330ab599964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063b0a87ac11461003b578063c221a3f414610059575b600080fd5b61004361006e565b604051610050919061024c565b60405180910390f35b61006c610067366004610135565b61007d565b005b6000546001600160a01b031681565b600080546040518691869186916001600160a01b031690869061009f9061010c565b6100ad95949392919061028c565b604051809103906000f0801580156100c9573d6000803e3d6000fd5b5090507fc1c0adb5f3d23903a15d7db0b842db176ec2a00eaa4c7ceed0ada27726aa88f081866040516100fd929190610260565b60405180910390a15050505050565b610e5d806102e883390190565b80356001600160a01b038116811461013057600080fd5b919050565b6000806000806080858703121561014a578384fd5b843567ffffffffffffffff80821115610161578586fd5b818701915087601f830112610174578586fd5b8135602082821115610188576101886102d1565b604051601f8301601f19168101820184811182821017156101ab576101ab6102d1565b60405282815284830182018b10156101c1578889fd5b82828601838301378083018201989098526101dd898201610119565b965050505050604085013591506101f660608601610119565b905092959194509250565b60008151808452815b818110156102265760208185018101518683018201520161020a565b818111156102375782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038316815260406020820181905260009061028490830184610201565b949350505050565b600060a0825261029f60a0830188610201565b6001600160a01b0396871660208401526040830195909552509184166060830152909216608090920191909152919050565b634e487b7160e01b600052604160045260246000fdfe60806040523480156200001157600080fd5b5060405162000e5d38038062000e5d833981016040819052620000349162000157565b84516200004990600090602088019062000094565b50600180546001600160a01b039586166001600160a01b03199182161790915560029390935560038054928516928416929092179091556004805491909316911617905550620002bd565b828054620000a2906200026a565b90600052602060002090601f016020900481019282620000c6576000855562000111565b82601f10620000e157805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000111578251825591602001919060010190620000f4565b506200011f92915062000123565b5090565b5b808211156200011f576000815560010162000124565b80516001600160a01b03811681146200015257600080fd5b919050565b600080600080600060a086880312156200016f578081fd5b85516001600160401b038082111562000186578283fd5b818801915088601f8301126200019a578283fd5b815181811115620001af57620001af620002a7565b6040516020601f8301601f1916820181018481118382101715620001d757620001d7620002a7565b60405282825284830181018c1015620001ee578586fd5b8593505b82841015620002115784840181015182850182015292830192620001f2565b828411156200022257858184840101525b81995062000232818c016200013a565b98505050505050604086015192506200024e606087016200013a565b91506200025e608087016200013a565b90509295509295909350565b6002810460018216806200027f57607f821691505b60208210811415620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610b9080620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a51b4b651161005b578063a51b4b65146100dd578063a888c2cd146100f2578063b0a87ac114610114578063f7c618c11461011c57610088565b8063310a1ee31461008d5780634621d082146100ab5780637ceae310146100b557806399b44ba0146100ca575b600080fd5b610095610124565b6040516100a29190610ad0565b60405180910390f35b6100b361012a565b005b6100bd6101f3565b6040516100a2919061090c565b6100b36100d83660046107d8565b610202565b6100e561038a565b6040516100a29190610939565b610105610100366004610894565b610418565b6040516100a29392919061094c565b6100bd6104e4565b6100bd6104f3565b60025481565b60025442116101545760405162461bcd60e51b815260040161014b906109c0565b60405180910390fd5b600480546001546040516370a0823160e01b81526101f1936001600160a01b0393841693909216916370a082319161018e9130910161090c565b60206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906108ac565b6001546001600160a01b03169190610502565b565b6004546001600160a01b031681565b6003546001600160a01b0316331461022c5760405162461bcd60e51b815260040161014b906109ec565b825161024a5760405162461bcd60e51b815260040161014b90610a5a565b801561026c57600154610267906001600160a01b03168383610502565b6102a7565b806102a7576001546040516370a0823160e01b81526102a79184916001600160a01b03909116906370a082319061018e90309060040161090c565b604080516060810182528481526001600160a01b0384166020808301919091529181018390526005805460018101825560009190915281518051929360039092027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001926103189284920190610708565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517fa1c3b325aa2c115e4b244062eba2515bc5585ae5b41556be8fef399ae9fde11b9061037d9085908590859061094c565b60405180910390a1505050565b6000805461039790610b09565b80601f01602080910402602001604051908101604052809291908181526020018280546103c390610b09565b80156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b505050505081565b6005818154811061042857600080fd5b906000526020600020906003020160009150905080600001805461044b90610b09565b80601f016020809104026020016040519081016040528092919081815260200182805461047790610b09565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b6003546001600160a01b031681565b6001546001600160a01b031681565b6105588363a9059cbb60e01b8484604051602401610521929190610920565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261055d565b505050565b60006105b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105ec9092919063ffffffff16565b80519091501561055857808060200190518101906105d091906107b8565b6105585760405162461bcd60e51b815260040161014b90610a86565b60606105fb8484600085610605565b90505b9392505050565b6060824710156106275760405162461bcd60e51b815260040161014b9061097a565b610630856106c5565b61064c5760405162461bcd60e51b815260040161014b90610a23565b600080866001600160a01b0316858760405161066891906108f0565b60006040518083038185875af1925050503d80600081146106a5576040519150601f19603f3d011682016040523d82523d6000602084013e6106aa565b606091505b50915091506106ba8282866106cf565b979650505050505050565b803b15155b919050565b606083156106de5750816105fe565b8251156106ee5782518084602001fd5b8160405162461bcd60e51b815260040161014b9190610939565b82805461071490610b09565b90600052602060002090601f016020900481019282610736576000855561077c565b82601f1061074f57805160ff191683800117855561077c565b8280016001018555821561077c579182015b8281111561077c578251825591602001919060010190610761565b5061078892915061078c565b5090565b5b80821115610788576000815560010161078d565b80356001600160a01b03811681146106ca57600080fd5b6000602082840312156107c9578081fd5b815180151581146105fe578182fd5b6000806000606084860312156107ec578182fd5b833567ffffffffffffffff80821115610803578384fd5b818601915086601f830112610816578384fd5b813560208282111561082a5761082a610b44565b604051601f8301601f191681018201848111828210171561084d5761084d610b44565b60405282815284830182018a1015610863578687fd5b8282860183830137808301820187905296506108808882016107a1565b955050505050604084013590509250925092565b6000602082840312156108a5578081fd5b5035919050565b6000602082840312156108bd578081fd5b5051919050565b600081518084526108dc816020860160208601610ad9565b601f01601f19169290920160200192915050565b60008251610902818460208701610ad9565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6000602082526105fe60208301846108c4565b60006060825261095f60608301866108c4565b6001600160a01b039490941660208301525060400152919050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526012908201527111549493d48e88139bdd08195e1c1a5c995960721b604082015260600190565b60208082526018908201527f4552524f523a2053656e646572206e6f7420676f7665726e0000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152714552524f523a204e6f2065766964656e636560701b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b83811015610af4578181015183820152602001610adc565b83811115610b03576000848401525b50505050565b600281046001821680610b1d57607f821691505b60208210811415610b3e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c8ad43dc6900bb9abd03a4b71927382880fa48be941067e05a067a62ed30b70264736f6c63430008000033a2646970667358221220ab32f24ca5ae5bb9c0a04ad2812bee88213d7e54068be324e3d96b1330ab599964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1368,
        "contract": "contracts/QuestFactory.sol:QuestFactory",
        "label": "aragonGovernAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}