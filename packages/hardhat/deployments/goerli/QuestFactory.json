{
  "address": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aragonGovernAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_createDepositToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_createDepositAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_playDepositToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_playDepositAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CreateDepositChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PlayDepositChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "questAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "questTitle",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "questDetailsRef",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expireTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fundsRecoveryAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "createDepositToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "createDepositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "playDepositToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "playDepositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "maxPlayers",
          "type": "uint32"
        }
      ],
      "name": "QuestCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aragonGovernAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createDeposit",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_questTitle",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_questDetailsRef",
          "type": "bytes"
        },
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_fundsRecoveryAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_maxPlayers",
          "type": "uint32"
        }
      ],
      "name": "createQuest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playDeposit",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setCreateDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setPlayDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
  "receipt": {
    "to": null,
    "from": "0x91B0d67D3F47A30FBEeB159E67209Ad6cb2cE22E",
    "contractAddress": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
    "transactionIndex": 56,
    "gasUsed": "2442418",
    "logsBloom": "0x
    "blockHash": "0xf0e56fd6a4856907ed29c12837bbb19db726c4f86b2d05e70ea5d43f0d1000e5",
    "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
    "logs": [
      {
        "transactionIndex": 56,
        "blockNumber": 7949788,
        "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
        "address": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000091b0d67d3f47a30fbeeb159e67209ad6cb2ce22e"
        ],
        "data": "0x",
        "logIndex": 124,
        "blockHash": "0xf0e56fd6a4856907ed29c12837bbb19db726c4f86b2d05e70ea5d43f0d1000e5"
      },
      {
        "transactionIndex": 56,
        "blockNumber": 7949788,
        "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
        "address": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
        "topics": [
          "0x35c5e8a6f8bed2c61a2eb1996d117b1b96192314c0d4ca7cd96360f250920079"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000006371c010000000000000000000000000bc74d76abb7fa2311eab46a31273452aafd98db1000000000000000000000000000000000000000000000000002386f26fc10000",
        "logIndex": 125,
        "blockHash": "0xf0e56fd6a4856907ed29c12837bbb19db726c4f86b2d05e70ea5d43f0d1000e5"
      },
      {
        "transactionIndex": 56,
        "blockNumber": 7949788,
        "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
        "address": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
        "topics": [
          "0x013c800b1a136f9798a25e471501a7b824156d1e9cba8439821c5a41adf2fb89"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000006371c010000000000000000000000000bc74d76abb7fa2311eab46a31273452aafd98db1000000000000000000000000000000000000000000000000002386f26fc10000",
        "logIndex": 126,
        "blockHash": "0xf0e56fd6a4856907ed29c12837bbb19db726c4f86b2d05e70ea5d43f0d1000e5"
      },
      {
        "transactionIndex": 56,
        "blockNumber": 7949788,
        "transactionHash": "0xf6402d214b2b43a40b082da5ff471c3422f4975bdde51d50530f5127288fc7b4",
        "address": "0x81AF972C86e55E45db1971fDe2549bEC0C7C8d70",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x00000000000000000000000091b0d67d3f47a30fbeeb159e67209ad6cb2ce22e",
          "0x0000000000000000000000007375ed576952bd6ced060eee2db763130ea13ba0"
        ],
        "data": "0x",
        "logIndex": 127,
        "blockHash": "0xf0e56fd6a4856907ed29c12837bbb19db726c4f86b2d05e70ea5d43f0d1000e5"
      }
    ],
    "blockNumber": 7949788,
    "cumulativeGasUsed": "8875770",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4a5b36e48a8b03DC05e3421623825c8E3f5D872",
    "0xbc74d76abB7FA2311eab46A31273452aAFD98DB1",
    "10000000000000000",
    "0xbc74d76abB7FA2311eab46A31273452aAFD98DB1",
    "10000000000000000",
    "0x7375Ed576952BD6CeD060EeE2Db763130eA13bA0"
  ],
  "solcInputHash": "2b5e717083037020519b0c990f909179",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aragonGovernAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_createDepositToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_createDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_playDepositToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_playDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreateDepositChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlayDepositChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"questAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questTitle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"questDetailsRef\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expireTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fundsRecoveryAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"createDepositToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createDepositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"playDepositToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"playDepositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxPlayers\",\"type\":\"uint32\"}],\"name\":\"QuestCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aragonGovernAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createDeposit\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_questTitle\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_questDetailsRef\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_fundsRecoveryAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_maxPlayers\",\"type\":\"uint32\"}],\"name\":\"createQuest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playDeposit\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setCreateDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setPlayDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuestFactory.sol\":\"QuestFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Quest.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./libraries/Deposit.sol\\\";\\r\\nimport \\\"./libraries/Models.sol\\\";\\r\\nimport \\\"./libraries/IExecutable.sol\\\";\\r\\nimport \\\"./QuestFactory.sol\\\";\\r\\n\\r\\ncontract Quest is IExecutable {\\r\\n    using SafeMath for uint256;\\r\\n    using SafeERC20 for IERC20;\\r\\n    using DepositLib for Models.Deposit;\\r\\n\\r\\n    // Quest payload\\r\\n    address public questCreator;\\r\\n    string public questTitle;\\r\\n    bytes public questDetailsRef;\\r\\n    IERC20 public rewardToken;\\r\\n    uint256 public expireTime;\\r\\n    address public aragonGovernAddress;\\r\\n    address payable public fundsRecoveryAddress;\\r\\n    uint32 public maxPlayers; // 0 for infinite\\r\\n\\r\\n    Models.Claim[] public claims;\\r\\n    Models.Deposit public createDeposit;\\r\\n    Models.Deposit public playDeposit;\\r\\n    bool public isCreateDepositReleased;\\r\\n    address[] public playerList;\\r\\n\\r\\n    event QuestClaimed(bytes evidence, address player, uint256 amount);\\r\\n    event QuestPlayed(address player, uint256 timestamp);\\r\\n    event QuestUnplayed(address player, uint256 timestamp);\\r\\n\\r\\n    constructor(\\r\\n        string memory _questTitle,\\r\\n        bytes memory _questDetailsRef,\\r\\n        IERC20 _rewardToken,\\r\\n        uint256 _expireTime,\\r\\n        address _aragonGovernAddress,\\r\\n        address payable _fundsRecoveryAddress,\\r\\n        Models.Deposit memory _createDeposit,\\r\\n        Models.Deposit memory _playDeposit,\\r\\n        address _questCreator,\\r\\n        uint32 _maxPlayers\\r\\n    ) {\\r\\n        questTitle = _questTitle;\\r\\n        questDetailsRef = _questDetailsRef;\\r\\n        rewardToken = _rewardToken;\\r\\n        expireTime = _expireTime;\\r\\n        aragonGovernAddress = _aragonGovernAddress;\\r\\n        fundsRecoveryAddress = _fundsRecoveryAddress;\\r\\n        questCreator = _questCreator;\\r\\n        createDeposit = _createDeposit;\\r\\n        playDeposit = _playDeposit;\\r\\n\\r\\n        isCreateDepositReleased = false;\\r\\n        maxPlayers = _maxPlayers;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Claim a quest reward.\\r\\n     *\\r\\n     * @param _evidence Evidence of the claim.\\r\\n     * @param _player Player address.\\r\\n     * @param _amount Amount of the reward.\\r\\n     *\\r\\n     * requires sender to be aragonGovernAddress\\r\\n     * requires evidence to not be empty\\r\\n     * requires claim amount to not exceed available deposit when same token\\r\\n     *\\r\\n     * emit QuestClaimed\\r\\n     */\\r\\n    function claim(\\r\\n        bytes memory _evidence,\\r\\n        address _player,\\r\\n        uint256 _amount,\\r\\n        bool _claimAll\\r\\n    ) external {\\r\\n        require(msg.sender == aragonGovernAddress, \\\"ERROR: Sender not govern\\\");\\r\\n        require(_evidence.length != 0, \\\"ERROR: No evidence\\\");\\r\\n\\r\\n        uint256 balance = rewardToken.balanceOf(address(this));\\r\\n\\r\\n        if (_claimAll) {\\r\\n            // Claim all but let deposit if they are same token\\r\\n            if (address(rewardToken) == address(createDeposit.token)) {\\r\\n                (, uint256 result) = balance.trySub(createDeposit.amount);\\r\\n                _amount = result;\\r\\n            } else {\\r\\n                _amount = balance;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (address(rewardToken) == address(createDeposit.token)) {\\r\\n            (, uint256 result) = balance.trySub(_amount);\\r\\n            require(\\r\\n                result >= createDeposit.amount,\\r\\n                \\\"ERROR: Should not exceed allowed bounty\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        if (_amount > 0) {\\r\\n            rewardToken.safeTransfer(_player, _amount);\\r\\n        }\\r\\n\\r\\n        claims.push(Models.Claim(_evidence, _player, _amount));\\r\\n\\r\\n        emit QuestClaimed(_evidence, _player, _amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Release deposit to creator and send unused funds to fundsRecoveryAddress.\\r\\n     * requires quests to have expired\\r\\n     *\\r\\n     * requires quest to be expired\\r\\n     */\\r\\n    function recoverFundsAndDeposit() external {\\r\\n        require(block.timestamp >= expireTime, \\\"ERROR: Not expired\\\");\\r\\n\\r\\n        // Restore deposit if not already released\\r\\n        if (!isCreateDepositReleased) {\\r\\n            createDeposit.releaseTo(questCreator);\\r\\n            isCreateDepositReleased = true;\\r\\n        }\\r\\n\\r\\n        rewardToken.safeTransfer(\\r\\n            fundsRecoveryAddress,\\r\\n            rewardToken.balanceOf(address(this))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Verify given executer can execute this quest.\\r\\n     * @param executer The player to verify\\r\\n     */\\r\\n    function canExecute(address executer)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        return findIndexOfPlayer(executer) != -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Register a player to the quest. (sender could be the player or quest creator)\\r\\n     *\\r\\n     * @param _player Player address.\\r\\n     *\\r\\n     * requires sender to be the quest creator or the player\\r\\n     * requires sender to put a deposit (if its creator, deposit will be released to player)\\r\\n     * requires player list is not full\\r\\n     * requires quest is not expired\\r\\n     * requires player is not already registered\\r\\n     *\\r\\n     * emit QuestPlayed with player and timestamp\\r\\n     */\\r\\n    function play(address _player) external {\\r\\n        require(\\r\\n            msg.sender == _player || msg.sender == questCreator,\\r\\n            \\\"ERROR: Sender not player nor creator\\\"\\r\\n        );\\r\\n        require(\\r\\n            maxPlayers == 0 || playerList.length < maxPlayers,\\r\\n            \\\"ERROR: Max players reached\\\"\\r\\n        );\\r\\n        require(block.timestamp < expireTime, \\\"ERROR: Quest expired\\\");\\r\\n        int256 playerIndex = findIndexOfPlayer(_player);\\r\\n        require(playerIndex == -1, \\\"ERROR: Player already exists\\\");\\r\\n\\r\\n        playDeposit.collectFrom(msg.sender, address(this));\\r\\n\\r\\n        playerList.push(_player);\\r\\n        emit QuestPlayed(_player, block.timestamp);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Unregister a player from the quest. (sender could be the player or quest creator)\\r\\n     * @param _player Player address.\\r\\n     *\\r\\n     * requires sender to be the quest creator or the player\\r\\n     * requires player is registered\\r\\n     *\\r\\n     * emit QuestUnplayed with player and timestamp\\r\\n     */\\r\\n    function unplay(address _player) external {\\r\\n        require(\\r\\n            msg.sender == _player || msg.sender == questCreator,\\r\\n            \\\"ERROR: Sender not player nor creator\\\"\\r\\n        );\\r\\n        int256 playerIndex = findIndexOfPlayer(_player);\\r\\n        require(playerIndex != -1, \\\"ERROR: player not in list\\\");\\r\\n\\r\\n        delete playerList[uint256(playerIndex)];\\r\\n        playDeposit.releaseTo(_player);\\r\\n        emit QuestUnplayed(_player, block.timestamp);\\r\\n    }\\r\\n\\r\\n    // Private functions\\r\\n\\r\\n    function findIndexOfPlayer(address _player) private view returns (int256) {\\r\\n        for (uint256 i = 0; i < playerList.length; i++) {\\r\\n            if (playerList[i] == _player) {\\r\\n                return int256(i);\\r\\n            }\\r\\n        }\\r\\n        return -1;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd27a1fbc631a77f45b793962652f84197a8837b157b5ae3714a3e6b508dc5395\",\"license\":\"GPL-3.0\"},\"contracts/QuestFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./libraries/Deposit.sol\\\";\\r\\nimport \\\"./libraries/Models.sol\\\";\\r\\nimport \\\"./Quest.sol\\\";\\r\\n\\r\\ncontract QuestFactory is Ownable {\\r\\n    using DepositLib for Models.Deposit;\\r\\n\\r\\n    address public aragonGovernAddress;\\r\\n    Models.Deposit public createDeposit;\\r\\n    Models.Deposit public playDeposit;\\r\\n\\r\\n    event QuestCreated(\\r\\n        address questAddress,\\r\\n        string questTitle,\\r\\n        bytes questDetailsRef,\\r\\n        address rewardTokenAddress,\\r\\n        uint256 expireTime,\\r\\n        address fundsRecoveryAddress,\\r\\n        address createDepositToken,\\r\\n        uint256 createDepositAmount,\\r\\n        address playDepositToken,\\r\\n        uint256 playDepositAmount,\\r\\n        address creator,\\r\\n        uint32 maxPlayers\\r\\n    );\\r\\n\\r\\n    event CreateDepositChanged(\\r\\n        uint256 timestamp,\\r\\n        address token,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event PlayDepositChanged(uint256 timestamp, address token, uint256 amount);\\r\\n\\r\\n    constructor(\\r\\n        address _aragonGovernAddress,\\r\\n        IERC20 _createDepositToken,\\r\\n        uint256 _createDepositAmount,\\r\\n        IERC20 _playDepositToken,\\r\\n        uint256 _playDepositAmount,\\r\\n        address _initialOwner\\r\\n    ) {\\r\\n        aragonGovernAddress = _aragonGovernAddress;\\r\\n        setCreateDeposit(_createDepositToken, _createDepositAmount);\\r\\n        setPlayDeposit(_playDepositToken, _playDepositAmount);\\r\\n        if (_initialOwner != msg.sender) {\\r\\n            transferOwnership(_initialOwner);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev Set the deposit token and amount.\\r\\n     * @param _depositToken The deposit token.\\r\\n     * @param _depositAmount The deposit amount.\\r\\n     * emit CreateDepositChanged\\r\\n     */\\r\\n    function setCreateDeposit(IERC20 token, uint256 amount) public onlyOwner {\\r\\n        createDeposit = Models.Deposit(token, amount);\\r\\n        emit CreateDepositChanged(block.timestamp, address(token), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev Set the play deposit token and amount.\\r\\n     * @param _depositToken The deposit token.\\r\\n     * @param _depositAmount The deposit amount.\\r\\n     * emit PlayDepositChanged\\r\\n     */\\r\\n    function setPlayDeposit(IERC20 token, uint256 amount) public onlyOwner {\\r\\n        playDeposit = Models.Deposit(token, amount);\\r\\n        emit PlayDepositChanged(block.timestamp, address(token), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Collect deposit, deploy a new Quest with given info contract\\r\\n     * and transfer deposit to new Quest.\\r\\n     * @param _title Quest title.\\r\\n     * @param _details Quest details.\\r\\n     * @param _rewardTokenAddress Reward token address.\\r\\n     * @param _expireTime Expire time.\\r\\n     * @param _fundsRecoveryAddress Funds recovery address.\\r\\n     * requires deposit allowance\\r\\n     * returns Quest address.\\r\\n     * emits QuestCreated\\r\\n     */\\r\\n    function createQuest(\\r\\n        string memory _questTitle,\\r\\n        bytes memory _questDetailsRef,\\r\\n        IERC20 _rewardToken,\\r\\n        uint256 _expireTime,\\r\\n        address payable _fundsRecoveryAddress,\\r\\n        uint32 _maxPlayers\\r\\n    ) external returns (address) {\\r\\n        Quest quest = new Quest(\\r\\n            _questTitle,\\r\\n            _questDetailsRef,\\r\\n            _rewardToken,\\r\\n            _expireTime,\\r\\n            aragonGovernAddress,\\r\\n            _fundsRecoveryAddress,\\r\\n            Models.Deposit(createDeposit.token, createDeposit.amount),\\r\\n            Models.Deposit(playDeposit.token, playDeposit.amount),\\r\\n            msg.sender,\\r\\n            _maxPlayers\\r\\n        );\\r\\n\\r\\n        // Collect deposit from quest creator and send it to quest\\r\\n        createDeposit.collectFrom(msg.sender, address(quest));\\r\\n\\r\\n        emit QuestCreated(\\r\\n            address(quest),\\r\\n            _questTitle,\\r\\n            _questDetailsRef,\\r\\n            address(_rewardToken),\\r\\n            _expireTime,\\r\\n            _fundsRecoveryAddress,\\r\\n            address(createDeposit.token),\\r\\n            createDeposit.amount,\\r\\n            address(playDeposit.token),\\r\\n            playDeposit.amount,\\r\\n            msg.sender,\\r\\n            _maxPlayers\\r\\n        );\\r\\n\\r\\n        return address(quest);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe8fe9abf9210f11375f32c3bb566a4fb940052c2dd5e6211bc6b0d44d3173c98\",\"license\":\"GPL-3.0\"},\"contracts/libraries/Deposit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"./Models.sol\\\";\\r\\n\\r\\nlibrary DepositLib {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    /*\\r\\n     * Collect deposit from signer and send it to _to address.\\r\\n     * @param _token The deposit token.\\r\\n     * @param _amount The deposit amount.\\r\\n     * @param _to The address where the deposit should be transfered.\\r\\n     */\\r\\n    function collectFrom(\\r\\n        Models.Deposit memory _collateral,\\r\\n        address _from,\\r\\n        address _to\\r\\n    ) internal {\\r\\n        collectFrom(_collateral, _from);\\r\\n        releaseTo(_collateral, _to);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Collect deposit from signer\\r\\n     * @param _token The deposit token.\\r\\n     * @param _amount The deposit amount.\\r\\n     */\\r\\n    function collectFrom(Models.Deposit memory _collateral, address _from)\\r\\n        internal\\r\\n    {\\r\\n        if (_collateral.amount > 0) {\\r\\n            // Verify allowance\\r\\n            uint256 allowance = _collateral.token.allowance(\\r\\n                _from,\\r\\n                address(this)\\r\\n            );\\r\\n            require(\\r\\n                allowance >= _collateral.amount,\\r\\n                \\\"ERROR : Deposit bad allowance\\\"\\r\\n            );\\r\\n\\r\\n            _collateral.token.safeTransferFrom(\\r\\n                _from,\\r\\n                address(this),\\r\\n                _collateral.amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function releaseTo(Models.Deposit memory _collateral, address _to)\\r\\n        internal\\r\\n    {\\r\\n        if (_collateral.amount > 0) {\\r\\n            _collateral.token.safeTransfer(_to, _collateral.amount);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x00419d7de8fe1cf0e8c06555f8c2929dede75db585aa6c9e8c7a2ff8c91f5051\",\"license\":\"GPL-3.0\"},\"contracts/libraries/IExecutable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\ninterface IExecutable {\\r\\n    function canExecute(address executer) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1d0c1ecd494b35f6e3c1d7e092ac6b78425f02ad95ee0dbb4ba7215120072cea\",\"license\":\"GPL-3.0\"},\"contracts/libraries/Models.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.1;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nlibrary Models {\\r\\n    struct Deposit {\\r\\n        IERC20 token;\\r\\n        uint256 amount;\\r\\n    }\\r\\n    struct Claim {\\r\\n        bytes evidence;\\r\\n        address player;\\r\\n        uint256 amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe986229d7b557584748437b549743509e0fe5e41fc02b2d468dbae860612be26\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063b0a87ac1116200006f578063b0a87ac11462000104578063d03ffefb146200010e578063e87fae211462000118578063edeecdd3146200012f578063f2fde38b146200014657620000a0565b8063715018a614620000a55780638c43b41114620000b15780638c53c9bd14620000c85780638da5cb5b14620000eb575b600080fd5b620000af6200015d565b005b620000af620000c23660046200095f565b62000175565b620000d2620001f5565b604051620000e292919062000bd5565b60405180910390f35b620000f56200020a565b604051620000e2919062000ae7565b620000f562000219565b620000d262000228565b620000f5620001293660046200098d565b6200023d565b620000af620001403660046200095f565b6200039a565b620000af620001573660046200091e565b6200040e565b6200016762000458565b6200017360006200049e565b565b6200017f62000458565b6040805180820182526001600160a01b0384168082526020909101839052600480546001600160a01b03191690911790556005829055517f013c800b1a136f9798a25e471501a7b824156d1e9cba8439821c5a41adf2fb8990620001e99042908590859062000e19565b60405180910390a15050565b6004546005546001600160a01b039091169082565b6000546001600160a01b031690565b6001546001600160a01b031681565b6002546003546001600160a01b039091169082565b6001546040805180820182526002546001600160a01b039081168252600354602080840191909152835180850185526004548316815260055491810191909152925160009485948c948c948c948c9491909116928b929133908c90620002a39062000871565b620002b89a9998979695949392919062000c03565b604051809103906000f080158015620002d5573d6000803e3d6000fd5b50604080518082019091526002546001600160a01b03168152600354602082015290915062000306903383620004ee565b7f6b2fd076e791d7e0318fa62bf6e275ebe9ff601badea3d9bfdc43c02317d1119818989898989600260000160009054906101000a90046001600160a01b0316600260010154600460000160009054906101000a90046001600160a01b0316600460010154338e604051620003879c9b9a9998979695949392919062000b39565b60405180910390a1979650505050505050565b620003a462000458565b6040805180820182526001600160a01b0384168082526020909101839052600280546001600160a01b03191690911790556003829055517f35c5e8a6f8bed2c61a2eb1996d117b1b96192314c0d4ca7cd96360f25092007990620001e99042908590859062000e19565b6200041862000458565b6001600160a01b0381166200044a5760405162461bcd60e51b8152600401620004419062000ca0565b60405180910390fd5b62000455816200049e565b50565b620004626200050b565b6001600160a01b0316620004756200020a565b6001600160a01b031614620001735760405162461bcd60e51b8152600401620004419062000d2c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620004fa83836200050f565b620005068382620005f1565b505050565b3390565b602082015115620005ed578151604051636eb1769f60e11b81526000916001600160a01b03169063dd62ed3e906200054e908590309060040162000afb565b60206040518083038186803b1580156200056757600080fd5b505afa1580156200057c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a2919062000a60565b90508260200151811015620005cb5760405162461bcd60e51b8152600401620004419062000d61565b6020830151835162000506916001600160a01b0390911690849030906200061c565b5050565b602082015115620005ed5760208201518251620005ed916001600160a01b039091169083906200067e565b62000678846323b872dd60e01b858585604051602401620006409392919062000b15565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152620006a0565b50505050565b620005068363a9059cbb60e01b84846040516024016200064092919062000bd5565b6000620006f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620007379092919063ffffffff16565b8051909150156200050657808060200190518101906200071891906200093d565b620005065760405162461bcd60e51b8152600401620004419062000dcf565b606062000748848460008562000752565b90505b9392505050565b606082471015620007775760405162461bcd60e51b8152600401620004419062000ce6565b620007828562000820565b620007a15760405162461bcd60e51b8152600401620004419062000d98565b600080866001600160a01b03168587604051620007bf919062000ac9565b60006040518083038185875af1925050503d8060008114620007fe576040519150601f19603f3d011682016040523d82523d6000602084013e62000803565b606091505b50915091506200081582828662000833565b979650505050505050565b6001600160a01b0381163b15155b919050565b60608315620008445750816200074b565b825115620008555782518084602001fd5b8160405162461bcd60e51b815260040162000441919062000bee565b6119a48062000e9483390190565b600067ffffffffffffffff808411156200089d576200089d62000e67565b604051601f8501601f19908116603f01168101908282118183101715620008c857620008c862000e67565b81604052809350858152868686011115620008e257600080fd5b858560208301376000602087830101525050509392505050565b80356200082e8162000e7d565b803563ffffffff811681146200082e57600080fd5b60006020828403121562000930578081fd5b81356200074b8162000e7d565b6000602082840312156200094f578081fd5b815180151581146200074b578182fd5b6000806040838503121562000972578081fd5b82356200097f8162000e7d565b946020939093013593505050565b60008060008060008060c08789031215620009a6578182fd5b863567ffffffffffffffff80821115620009be578384fd5b818901915089601f830112620009d2578384fd5b620009e38a8335602085016200087f565b97506020890135915080821115620009f9578384fd5b508701601f8101891362000a0b578283fd5b62000a1c898235602084016200087f565b95505062000a2d60408801620008fc565b93506060870135925062000a4460808801620008fc565b915062000a5460a0880162000909565b90509295509295509295565b60006020828403121562000a72578081fd5b5051919050565b6000815180845262000a9381602086016020860162000e38565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602090810151910152565b63ffffffff169052565b6000825162000add81846020870162000e38565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018060a01b03808f168352610180602084015262000b5f61018084018f62000a79565b838103604085015262000b73818f62000a79565b925050808c1660608401528a6080840152808a1660a084015280891660c08401528760e0840152808716610100840152856101208401528085166101408401525062000bc461016083018462000abf565b9d9c50505050505050505050505050565b6001600160a01b03929092168252602082015260400190565b6000602082526200074b602083018462000a79565b600061018080835262000c198184018e62000a79565b9050828103602084015262000c2f818d62000a79565b6001600160a01b038c81166040860152606085018c90528a8116608086015289811660a0860152909250905062000c6a60c084018862000aa7565b62000c7a61010084018762000aa7565b8085166101408401525063ffffffff83166101608301529b9a5050505050505050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f4552524f52203a204465706f7369742062616420616c6c6f77616e6365000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b9283526001600160a01b03919091166020830152604082015260600190565b60005b8381101562000e5557818101518382015260200162000e3b565b83811115620006785750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200045557600080fdfe60806040523480156200001157600080fd5b50604051620019a4380380620019a48339810160408190526200003491620002b7565b8951620000499060019060208d019062000118565b5088516200005f9060029060208c019062000118565b50600380546001600160a01b03199081166001600160a01b039a8b16179091556004979097556005805488169689169690961790955560068054600080548916938a16939093179092558351600880548916918a169190911790556020938401516009558251600a80548916918a169190911790559190920151600b55600c805460ff19169055931693169290921763ffffffff60a01b1916600160a01b63ffffffff90931692909202919091179055506200044e9050565b8280546200012690620003e2565b90600052602060002090601f0160209004810192826200014a576000855562000195565b82601f106200016557805160ff191683800117855562000195565b8280016001018555821562000195579182015b828111156200019557825182559160200191906001019062000178565b50620001a3929150620001a7565b5090565b5b80821115620001a35760008155600101620001a8565b8051620001cb8162000435565b919050565b600082601f830112620001e1578081fd5b81516001600160401b03811115620001fd57620001fd6200041f565b602062000213601f8301601f19168201620003af565b828152858284870101111562000227578384fd5b835b838110156200024657858101830151828201840152820162000229565b838111156200025757848385840101525b5095945050505050565b60006040828403121562000273578081fd5b6200027f6040620003af565b905081516200028e8162000435565b808252506020820151602082015292915050565b805163ffffffff81168114620001cb57600080fd5b6000806000806000806000806000806101808b8d031215620002d7578586fd5b8a516001600160401b0380821115620002ee578788fd5b620002fc8e838f01620001d0565b9b5060208d015191508082111562000312578788fd5b50620003218d828e01620001d0565b9950506200033260408c01620001be565b975060608b015196506200034960808c01620001be565b95506200035960a08c01620001be565b94506200036a8c60c08d0162000261565b93506200037c8c6101008d0162000261565b92506200038d6101408c01620001be565b91506200039e6101608c01620002a2565b90509295989b9194979a5092959850565b604051601f8201601f191681016001600160401b0381118282101715620003da57620003da6200041f565b604052919050565b600281046001821680620003f757607f821691505b602082108114156200041957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200044b57600080fd5b50565b611546806200045e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a888c2cd116100a2578063d03ffefb11610071578063d03ffefb14610216578063e0c234231461021e578063e492814f14610233578063f294cf3814610246578063f7c618c11461024e57610116565b8063a888c2cd146101c6578063ae6d9073146101e8578063b0a87ac1146101fb578063b434151c1461020357610116565b8063579ca2c9116100e9578063579ca2c9146101785780636c3a4cce146101805780637ceae3101461019557806385c99e2b1461019d5780638c53c9bd146101b057610116565b8063151dfb061461011b578063310a1ee31461013057806348d6cb531461014e5780634c2412a214610163575b600080fd5b61012e610129366004610f1a565b610256565b005b61013861036f565b6040516101459190611441565b60405180910390f35b610156610375565b604051610145919061110a565b61016b61037e565b604051610145919061144a565b61012e610391565b610188610498565b604051610145919061109f565b6101886104a7565b6101566101ab366004610f1a565b6104b6565b6101b86104ce565b6040516101459291906110f1565b6101d96101d4366004611027565b6104e3565b60405161014593929190611128565b6101886101f6366004611027565b6105af565b6101886105d9565b61012e610211366004610f50565b6105e8565b6101b8610842565b610226610857565b6040516101459190611115565b61012e610241366004610f1a565b6108e5565b610226610a62565b610188610a6f565b336001600160a01b038216148061027757506000546001600160a01b031633145b61029c5760405162461bcd60e51b8152600401610293906113fd565b60405180910390fd5b60006102a782610a7e565b90508060001914156102cb5760405162461bcd60e51b8152600401610293906111cb565b600d81815481106102ec57634e487b7160e01b600052603260045260246000fd5b60009182526020918290200180546001600160a01b031916905560408051808201909152600a546001600160a01b03168152600b54918101919091526103329083610af5565b7fc4a67a0877d477de99d765a3d9f48abfbe6181dff4727d68c3cb60715555417582426040516103639291906110f1565b60405180910390a15050565b60045481565b600c5460ff1681565b600654600160a01b900463ffffffff1681565b6004544210156103b35760405162461bcd60e51b815260040161029390611248565b600c5460ff166103fa57600054604080518082019091526008546001600160a01b03908116825260095460208301526103ec9216610af5565b600c805460ff191660011790555b6006546003546040516370a0823160e01b8152610496926001600160a01b039081169216906370a082319061043390309060040161109f565b60206040518083038186803b15801561044b57600080fd5b505afa15801561045f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610483919061103f565b6003546001600160a01b03169190610b21565b565b6000546001600160a01b031681565b6006546001600160a01b031681565b60006104c182610a7e565b600019141590505b919050565b600a54600b546001600160a01b039091169082565b600781815481106104f357600080fd5b906000526020600020906003020160009150905080600001805461051690611487565b80601f016020809104026020016040519081016040528092919081815260200182805461054290611487565b801561058f5780601f106105645761010080835404028352916020019161058f565b820191906000526020600020905b81548152906001019060200180831161057257829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b600d81815481106105bf57600080fd5b6000918252602090912001546001600160a01b0316905081565b6005546001600160a01b031681565b6005546001600160a01b031633146106125760405162461bcd60e51b8152600401610293906112ab565b83516106305760405162461bcd60e51b815260040161029390611350565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a082319061066190309060040161109f565b60206040518083038186803b15801561067957600080fd5b505afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b1919061103f565b905081156106f1576008546003546001600160a01b03908116911614156106ed576009546000906106e3908390610b7c565b94506106f1915050565b8092505b6008546003546001600160a01b03908116911614156107405760006107168285610b7c565b91505060086001015481101561073e5760405162461bcd60e51b815260040161029390611184565b505b821561075d5760035461075d906001600160a01b03168585610b21565b604080516060810182528681526001600160a01b0386166020808301919091529181018590526007805460018101825560009190915281518051929360039092027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801926107ce9284920190610e5f565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517fa1c3b325aa2c115e4b244062eba2515bc5585ae5b41556be8fef399ae9fde11b9061083390879087908790611128565b60405180910390a15050505050565b6008546009546001600160a01b039091169082565b6002805461086490611487565b80601f016020809104026020016040519081016040528092919081815260200182805461089090611487565b80156108dd5780601f106108b2576101008083540402835291602001916108dd565b820191906000526020600020905b8154815290600101906020018083116108c057829003601f168201915b505050505081565b336001600160a01b038216148061090657506000546001600160a01b031633145b6109225760405162461bcd60e51b8152600401610293906113fd565b600654600160a01b900463ffffffff16158061094f5750600654600d54600160a01b90910463ffffffff16115b61096b5760405162461bcd60e51b815260040161029390611274565b600454421061098c5760405162461bcd60e51b815260040161029390611156565b600061099782610a7e565b905080600019146109ba5760405162461bcd60e51b81526004016102939061137c565b60408051808201909152600a546001600160a01b03168152600b5460208201526109e5903330610ba2565b600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0384161790556040517f35ec60f951b4abc8b287ab5148caf98524052482927d42e86a720cc71b8a76a19061036390849042906110f1565b6001805461086490611487565b6003546001600160a01b031681565b6000805b600d54811015610aeb57826001600160a01b0316600d8281548110610ab757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610ad95790506104c9565b80610ae3816114c2565b915050610a82565b5060001992915050565b602082015115610b1d5760208201518251610b1d916001600160a01b03909116908390610b21565b5050565b610b778363a9059cbb60e01b8484604051602401610b409291906110f1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bb6565b505050565b60008083831115610b9257506000905080610b9b565b50600190508183035b9250929050565b610bac8383610c45565b610b778382610af5565b6000610c0b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d179092919063ffffffff16565b805190915015610b775780806020019051810190610c299190610f34565b610b775760405162461bcd60e51b8152600401610293906113b3565b602082015115610b1d578151604051636eb1769f60e11b81526000916001600160a01b03169063dd62ed3e90610c8190859030906004016110b3565b60206040518083038186803b158015610c9957600080fd5b505afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd1919061103f565b90508260200151811015610cf75760405162461bcd60e51b8152600401610293906112e2565b60208301518351610b77916001600160a01b039091169084903090610d30565b6060610d268484600085610d57565b90505b9392505050565b610d51846323b872dd60e01b858585604051602401610b40939291906110cd565b50505050565b606082471015610d795760405162461bcd60e51b815260040161029390611202565b610d8285610e17565b610d9e5760405162461bcd60e51b815260040161029390611319565b600080866001600160a01b03168587604051610dba9190611083565b60006040518083038185875af1925050503d8060008114610df7576040519150601f19603f3d011682016040523d82523d6000602084013e610dfc565b606091505b5091509150610e0c828286610e26565b979650505050505050565b6001600160a01b03163b151590565b60608315610e35575081610d29565b825115610e455782518084602001fd5b8160405162461bcd60e51b81526004016102939190611115565b828054610e6b90611487565b90600052602060002090601f016020900481019282610e8d5760008555610ed3565b82601f10610ea657805160ff1916838001178555610ed3565b82800160010185558215610ed3579182015b82811115610ed3578251825591602001919060010190610eb8565b50610edf929150610ee3565b5090565b5b80821115610edf5760008155600101610ee4565b80356001600160a01b03811681146104c957600080fd5b80356104c9816114ff565b600060208284031215610f2b578081fd5b610d2982610ef8565b600060208284031215610f45578081fd5b8151610d29816114ff565b60008060008060808587031215610f65578283fd5b843567ffffffffffffffff80821115610f7c578485fd5b818701915087601f830112610f8f578485fd5b813581811115610fa157610fa16114e9565b604051601f8201601f19908116603f01168101908382118183101715610fc957610fc96114e9565b816040528281528a6020848701011115610fe1578788fd5b826020860160208301378760208483010152809850505050505061100760208601610ef8565b92506040850135915061101c60608601610f0f565b905092959194509250565b600060208284031215611038578081fd5b5035919050565b600060208284031215611050578081fd5b5051919050565b6000815180845261106f81602086016020860161145b565b601f01601f19169290920160200192915050565b6000825161109581846020870161145b565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610d296020830184611057565b60006060825261113b6060830186611057565b6001600160a01b039490941660208301525060400152919050565b60208082526014908201527311549493d48e88145d595cdd08195e1c1a5c995960621b604082015260600190565b60208082526027908201527f4552524f523a2053686f756c64206e6f742065786365656420616c6c6f77656460408201526620626f756e747960c81b606082015260800190565b60208082526019908201527f4552524f523a20706c61796572206e6f7420696e206c69737400000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526012908201527111549493d48e88139bdd08195e1c1a5c995960721b604082015260600190565b6020808252601a908201527f4552524f523a204d617820706c61796572732072656163686564000000000000604082015260600190565b60208082526018908201527f4552524f523a2053656e646572206e6f7420676f7665726e0000000000000000604082015260600190565b6020808252601d908201527f4552524f52203a204465706f7369742062616420616c6c6f77616e6365000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152714552524f523a204e6f2065766964656e636560701b604082015260600190565b6020808252601c908201527f4552524f523a20506c6179657220616c72656164792065786973747300000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526024908201527f4552524f523a2053656e646572206e6f7420706c61796572206e6f722063726560408201526330ba37b960e11b606082015260800190565b90815260200190565b63ffffffff91909116815260200190565b60005b8381101561147657818101518382015260200161145e565b83811115610d515750506000910152565b60028104600182168061149b57607f821691505b602082108114156114bc57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156114e257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b801515811461150d57600080fd5b5056fea26469706673582212205456ac563b6308078b13d71198eea77269eb0ad25564366e42200ea57ba8d01364736f6c63430008010033a264697066735822122050253ff51b610537fd058ae9038d740f1cc4a126ef1f82b94cefc7345ad9206a64736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/QuestFactory.sol:QuestFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2258,
        "contract": "contracts/QuestFactory.sol:QuestFactory",
        "label": "aragonGovernAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2261,
        "contract": "contracts/QuestFactory.sol:QuestFactory",
        "label": "createDeposit",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(Deposit)2629_storage"
      },
      {
        "astId": 2264,
        "contract": "contracts/QuestFactory.sol:QuestFactory",
        "label": "playDeposit",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(Deposit)2629_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)776": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_struct(Deposit)2629_storage": {
        "encoding": "inplace",
        "label": "struct Models.Deposit",
        "members": [
          {
            "astId": 2626,
            "contract": "contracts/QuestFactory.sol:QuestFactory",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)776"
          },
          {
            "astId": 2628,
            "contract": "contracts/QuestFactory.sol:QuestFactory",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}