{
  "address": "0xf20aeAD3583f35b5eA76b3fC59A652E525cCa83b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_questTitle",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_questDetailsRef",
          "type": "bytes"
        },
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_aragonGovernAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_fundsRecoveryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "evidence",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "QuestClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aragonGovernAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_evidence",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "evidence",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expireTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundsRecoveryAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "questDetailsRef",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "questTitle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recoverUnclaimedFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x83da35778e0aa04eb8c0320802ae280e054dca6c4c777af1e05865385a45d55a",
  "receipt": {
    "to": null,
    "from": "0xdf456B614fE9FF1C7c0B380330Da29C96d40FB02",
    "contractAddress": "0xf20aeAD3583f35b5eA76b3fC59A652E525cCa83b",
    "transactionIndex": 60,
    "gasUsed": "828318",
    "logsBloom": "0x
    "blockHash": "0x7dd13d17895c6af0ada878a800a207ed1a6ac24637ac03165beb47b71886cfae",
    "transactionHash": "0x83da35778e0aa04eb8c0320802ae280e054dca6c4c777af1e05865385a45d55a",
    "logs": [],
    "blockNumber": 9779632,
    "cumulativeGasUsed": "22298954",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "ASDF",
    "0x00",
    "0xdf456B614fE9FF1C7c0B380330Da29C96d40FB02",
    0,
    "0xdf456B614fE9FF1C7c0B380330Da29C96d40FB02",
    "0xdf456B614fE9FF1C7c0B380330Da29C96d40FB02"
  ],
  "solcInputHash": "99304b33a09ac11337de5cc443f6a962",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_questTitle\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_questDetailsRef\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_aragonGovernAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_fundsRecoveryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"evidence\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"QuestClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aragonGovernAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_evidence\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"evidence\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsRecoveryAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questDetailsRef\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questTitle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverUnclaimedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Quest.sol\":\"Quest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"contracts/Quest.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract Quest {\\n    using SafeERC20 for IERC20;\\n\\n    struct Claim {\\n        bytes evidence;\\n        address player;\\n        uint256 amount;\\n    }\\n\\n    string public questTitle;\\n    bytes public questDetailsRef;\\n    IERC20 public rewardToken;\\n    uint256 public expireTime;\\n    address public aragonGovernAddress;\\n    address payable public fundsRecoveryAddress;\\n    Claim[] public claims;\\n\\n    event QuestClaimed(bytes evidence, address player, uint256 amount);\\n\\n    constructor(\\n        string memory _questTitle,\\n        bytes memory _questDetailsRef,\\n        IERC20 _rewardToken,\\n        uint256 _expireTime,\\n        address _aragonGovernAddress,\\n        address payable _fundsRecoveryAddress\\n    ) {\\n        questTitle = _questTitle;\\n        questDetailsRef = _questDetailsRef;\\n        rewardToken = _rewardToken;\\n        expireTime = _expireTime;\\n        aragonGovernAddress = _aragonGovernAddress;\\n        fundsRecoveryAddress = _fundsRecoveryAddress;\\n    }\\n\\n    function recoverUnclaimedFunds() external {\\n        require(block.timestamp > expireTime, \\\"ERROR: Not expired\\\");\\n        rewardToken.safeTransfer(\\n            fundsRecoveryAddress,\\n            rewardToken.balanceOf(address(this))\\n        );\\n    }\\n\\n    function claim(\\n        bytes memory _evidence,\\n        address _player,\\n        uint256 _amount\\n    ) external {\\n        require(msg.sender == aragonGovernAddress, \\\"ERROR: Sender not govern\\\");\\n        require(_evidence.length != 0, \\\"ERROR: No evidence\\\");\\n\\n        if (_amount > 0) {\\n            rewardToken.safeTransfer(_player, _amount);\\n        } else if (_amount == 0) {\\n            rewardToken.safeTransfer(\\n                _player,\\n                rewardToken.balanceOf(address(this))\\n            );\\n        }\\n\\n        claims.push(Claim(_evidence, _player, _amount));\\n\\n        emit QuestClaimed(_evidence, _player, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x15ad152c3117e19be8c93e7d31b55146fcfdc20883e079e1df94951f66c04bad\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000ef138038062000ef183398101604081905262000034916200020d565b855162000049906000906020890190620000ac565b5084516200005f906001906020880190620000ac565b50600280546001600160a01b039586166001600160a01b03199182161790915560039390935560048054928516928416929092179091556005805491909316911617905550620003329050565b828054620000ba90620002df565b90600052602060002090601f016020900481019282620000de576000855562000129565b82601f10620000f957805160ff191683800117855562000129565b8280016001018555821562000129579182015b82811115620001295782518255916020019190600101906200010c565b50620001379291506200013b565b5090565b5b808211156200013757600081556001016200013c565b60006001600160401b03808411156200016f576200016f6200031c565b6040516020601f8601601f19168201810183811183821017156200019757620001976200031c565b8060405250819350858252868686011115620001b257600080fd5b600092505b85831015620001d4578483015182840182015291820191620001b7565b85831115620001e65760008187840101525b5050509392505050565b80516001600160a01b03811681146200020857600080fd5b919050565b60008060008060008060c0878903121562000226578182fd5b86516001600160401b03808211156200023d578384fd5b818901915089601f83011262000251578384fd5b620002628a83516020850162000152565b9750602089015191508082111562000278578384fd5b508701601f810189136200028a578283fd5b6200029b8982516020840162000152565b955050620002ac60408801620001f0565b935060608701519250620002c360808801620001f0565b9150620002d360a08801620001f0565b90509295509295509295565b600281046001821680620002f457607f821691505b602082108114156200031657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610baf80620003426000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a888c2cd11610066578063a888c2cd146100e8578063b0a87ac11461010a578063e0c2342314610112578063f294cf3814610127578063f7c618c11461012f57610093565b8063310a1ee3146100985780634621d082146100b65780637ceae310146100c057806399b44ba0146100d5575b600080fd5b6100a0610137565b6040516100ad9190610aef565b60405180910390f35b6100be61013d565b005b6100c8610205565b6040516100ad919061092b565b6100be6100e33660046107f7565b610214565b6100fb6100f63660046108b3565b61039c565b6040516100ad9392919061096b565b6100c8610468565b61011a610477565b6040516100ad9190610958565b61011a610505565b6100c8610512565b60035481565b60035442116101675760405162461bcd60e51b815260040161015e906109df565b60405180910390fd5b6005546002546040516370a0823160e01b8152610203926001600160a01b039081169216906370a08231906101a090309060040161092b565b60206040518083038186803b1580156101b857600080fd5b505afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906108cb565b6002546001600160a01b03169190610521565b565b6005546001600160a01b031681565b6004546001600160a01b0316331461023e5760405162461bcd60e51b815260040161015e90610a0b565b825161025c5760405162461bcd60e51b815260040161015e90610a79565b801561027e57600254610279906001600160a01b03168383610521565b6102b9565b806102b9576002546040516370a0823160e01b81526102b99184916001600160a01b03909116906370a08231906101a090309060040161092b565b604080516060810182528481526001600160a01b0384166020808301919091529181018390526006805460018101825560009190915281518051929360039092027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f019261032a9284920190610727565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517fa1c3b325aa2c115e4b244062eba2515bc5585ae5b41556be8fef399ae9fde11b9061038f9085908590859061096b565b60405180910390a1505050565b600681815481106103ac57600080fd5b90600052602060002090600302016000915090508060000180546103cf90610b28565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610b28565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b6004546001600160a01b031681565b6001805461048490610b28565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090610b28565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b505050505081565b6000805461048490610b28565b6002546001600160a01b031681565b6105778363a9059cbb60e01b848460405160240161054092919061093f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261057c565b505050565b60006105d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661060b9092919063ffffffff16565b80519091501561057757808060200190518101906105ef91906107d7565b6105775760405162461bcd60e51b815260040161015e90610aa5565b606061061a8484600085610624565b90505b9392505050565b6060824710156106465760405162461bcd60e51b815260040161015e90610999565b61064f856106e4565b61066b5760405162461bcd60e51b815260040161015e90610a42565b600080866001600160a01b03168587604051610687919061090f565b60006040518083038185875af1925050503d80600081146106c4576040519150601f19603f3d011682016040523d82523d6000602084013e6106c9565b606091505b50915091506106d98282866106ee565b979650505050505050565b803b15155b919050565b606083156106fd57508161061d565b82511561070d5782518084602001fd5b8160405162461bcd60e51b815260040161015e9190610958565b82805461073390610b28565b90600052602060002090601f016020900481019282610755576000855561079b565b82601f1061076e57805160ff191683800117855561079b565b8280016001018555821561079b579182015b8281111561079b578251825591602001919060010190610780565b506107a79291506107ab565b5090565b5b808211156107a757600081556001016107ac565b80356001600160a01b03811681146106e957600080fd5b6000602082840312156107e8578081fd5b8151801515811461061d578182fd5b60008060006060848603121561080b578182fd5b833567ffffffffffffffff80821115610822578384fd5b818601915086601f830112610835578384fd5b813560208282111561084957610849610b63565b604051601f8301601f191681018201848111828210171561086c5761086c610b63565b60405282815284830182018a1015610882578687fd5b82828601838301378083018201879052965061089f8882016107c0565b955050505050604084013590509250925092565b6000602082840312156108c4578081fd5b5035919050565b6000602082840312156108dc578081fd5b5051919050565b600081518084526108fb816020860160208601610af8565b601f01601f19169290920160200192915050565b60008251610921818460208701610af8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825261061d60208301846108e3565b60006060825261097e60608301866108e3565b6001600160a01b039490941660208301525060400152919050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526012908201527111549493d48e88139bdd08195e1c1a5c995960721b604082015260600190565b60208082526018908201527f4552524f523a2053656e646572206e6f7420676f7665726e0000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152714552524f523a204e6f2065766964656e636560701b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b83811015610b13578181015183820152602001610afb565b83811115610b22576000848401525b50505050565b600281046001821680610b3c57607f821691505b60208210811415610b5d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ad2857acb7ec86ce8b26d830a9822d2ab5f56bc250c441b88b0d22f7125e8f0264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063a888c2cd11610066578063a888c2cd146100e8578063b0a87ac11461010a578063e0c2342314610112578063f294cf3814610127578063f7c618c11461012f57610093565b8063310a1ee3146100985780634621d082146100b65780637ceae310146100c057806399b44ba0146100d5575b600080fd5b6100a0610137565b6040516100ad9190610aef565b60405180910390f35b6100be61013d565b005b6100c8610205565b6040516100ad919061092b565b6100be6100e33660046107f7565b610214565b6100fb6100f63660046108b3565b61039c565b6040516100ad9392919061096b565b6100c8610468565b61011a610477565b6040516100ad9190610958565b61011a610505565b6100c8610512565b60035481565b60035442116101675760405162461bcd60e51b815260040161015e906109df565b60405180910390fd5b6005546002546040516370a0823160e01b8152610203926001600160a01b039081169216906370a08231906101a090309060040161092b565b60206040518083038186803b1580156101b857600080fd5b505afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906108cb565b6002546001600160a01b03169190610521565b565b6005546001600160a01b031681565b6004546001600160a01b0316331461023e5760405162461bcd60e51b815260040161015e90610a0b565b825161025c5760405162461bcd60e51b815260040161015e90610a79565b801561027e57600254610279906001600160a01b03168383610521565b6102b9565b806102b9576002546040516370a0823160e01b81526102b99184916001600160a01b03909116906370a08231906101a090309060040161092b565b604080516060810182528481526001600160a01b0384166020808301919091529181018390526006805460018101825560009190915281518051929360039092027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f019261032a9284920190610727565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517fa1c3b325aa2c115e4b244062eba2515bc5585ae5b41556be8fef399ae9fde11b9061038f9085908590859061096b565b60405180910390a1505050565b600681815481106103ac57600080fd5b90600052602060002090600302016000915090508060000180546103cf90610b28565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610b28565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b6004546001600160a01b031681565b6001805461048490610b28565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090610b28565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b505050505081565b6000805461048490610b28565b6002546001600160a01b031681565b6105778363a9059cbb60e01b848460405160240161054092919061093f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261057c565b505050565b60006105d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661060b9092919063ffffffff16565b80519091501561057757808060200190518101906105ef91906107d7565b6105775760405162461bcd60e51b815260040161015e90610aa5565b606061061a8484600085610624565b90505b9392505050565b6060824710156106465760405162461bcd60e51b815260040161015e90610999565b61064f856106e4565b61066b5760405162461bcd60e51b815260040161015e90610a42565b600080866001600160a01b03168587604051610687919061090f565b60006040518083038185875af1925050503d80600081146106c4576040519150601f19603f3d011682016040523d82523d6000602084013e6106c9565b606091505b50915091506106d98282866106ee565b979650505050505050565b803b15155b919050565b606083156106fd57508161061d565b82511561070d5782518084602001fd5b8160405162461bcd60e51b815260040161015e9190610958565b82805461073390610b28565b90600052602060002090601f016020900481019282610755576000855561079b565b82601f1061076e57805160ff191683800117855561079b565b8280016001018555821561079b579182015b8281111561079b578251825591602001919060010190610780565b506107a79291506107ab565b5090565b5b808211156107a757600081556001016107ac565b80356001600160a01b03811681146106e957600080fd5b6000602082840312156107e8578081fd5b8151801515811461061d578182fd5b60008060006060848603121561080b578182fd5b833567ffffffffffffffff80821115610822578384fd5b818601915086601f830112610835578384fd5b813560208282111561084957610849610b63565b604051601f8301601f191681018201848111828210171561086c5761086c610b63565b60405282815284830182018a1015610882578687fd5b82828601838301378083018201879052965061089f8882016107c0565b955050505050604084013590509250925092565b6000602082840312156108c4578081fd5b5035919050565b6000602082840312156108dc578081fd5b5051919050565b600081518084526108fb816020860160208601610af8565b601f01601f19169290920160200192915050565b60008251610921818460208701610af8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825261061d60208301846108e3565b60006060825261097e60608301866108e3565b6001600160a01b039490941660208301525060400152919050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526012908201527111549493d48e88139bdd08195e1c1a5c995960721b604082015260600190565b60208082526018908201527f4552524f523a2053656e646572206e6f7420676f7665726e0000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152714552524f523a204e6f2065766964656e636560701b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b83811015610b13578181015183820152602001610afb565b83811115610b22576000848401525b50505050565b600281046001821680610b3c57607f821691505b60208210811415610b5d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ad2857acb7ec86ce8b26d830a9822d2ab5f56bc250c441b88b0d22f7125e8f0264736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1208,
        "contract": "contracts/Quest.sol:Quest",
        "label": "questTitle",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 1210,
        "contract": "contracts/Quest.sol:Quest",
        "label": "questDetailsRef",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes_storage"
      },
      {
        "astId": 1213,
        "contract": "contracts/Quest.sol:Quest",
        "label": "rewardToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)623"
      },
      {
        "astId": 1215,
        "contract": "contracts/Quest.sol:Quest",
        "label": "expireTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1217,
        "contract": "contracts/Quest.sol:Quest",
        "label": "aragonGovernAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1219,
        "contract": "contracts/Quest.sol:Quest",
        "label": "fundsRecoveryAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 1223,
        "contract": "contracts/Quest.sol:Quest",
        "label": "claims",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Claim)1206_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Claim)1206_storage)dyn_storage": {
        "base": "t_struct(Claim)1206_storage",
        "encoding": "dynamic_array",
        "label": "struct Quest.Claim[]",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)623": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Claim)1206_storage": {
        "encoding": "inplace",
        "label": "struct Quest.Claim",
        "members": [
          {
            "astId": 1201,
            "contract": "contracts/Quest.sol:Quest",
            "label": "evidence",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes_storage"
          },
          {
            "astId": 1203,
            "contract": "contracts/Quest.sol:Quest",
            "label": "player",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1205,
            "contract": "contracts/Quest.sol:Quest",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}