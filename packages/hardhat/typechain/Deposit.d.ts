/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DepositInterface extends ethers.utils.Interface {
  functions: {
    "amount()": FunctionFragment;
    "collectFrom(address)": FunctionFragment;
    "releaseTo(address)": FunctionFragment;
    "token()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "amount", values?: undefined): string;
  encodeFunctionData(functionFragment: "collectFrom", values: [string]): string;
  encodeFunctionData(functionFragment: "releaseTo", values: [string]): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;

  decodeFunctionResult(functionFragment: "amount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collectFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "releaseTo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;

  events: {
    "Lock(address,address,uint256)": EventFragment;
    "Unlock(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Lock"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unlock"): EventFragment;
}

export class Deposit extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DepositInterface;

  functions: {
    amount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "amount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    collectFrom(
      _from: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "collectFrom(address)"(
      _from: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    releaseTo(_to: string, overrides?: Overrides): Promise<ContractTransaction>;

    "releaseTo(address)"(
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    token(overrides?: CallOverrides): Promise<[string]>;

    "token()"(overrides?: CallOverrides): Promise<[string]>;
  };

  amount(overrides?: CallOverrides): Promise<BigNumber>;

  "amount()"(overrides?: CallOverrides): Promise<BigNumber>;

  collectFrom(
    _from: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "collectFrom(address)"(
    _from: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  releaseTo(_to: string, overrides?: Overrides): Promise<ContractTransaction>;

  "releaseTo(address)"(
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  token(overrides?: CallOverrides): Promise<string>;

  "token()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    amount(overrides?: CallOverrides): Promise<BigNumber>;

    "amount()"(overrides?: CallOverrides): Promise<BigNumber>;

    collectFrom(_from: string, overrides?: CallOverrides): Promise<void>;

    "collectFrom(address)"(
      _from: string,
      overrides?: CallOverrides
    ): Promise<void>;

    releaseTo(_to: string, overrides?: CallOverrides): Promise<void>;

    "releaseTo(address)"(_to: string, overrides?: CallOverrides): Promise<void>;

    token(overrides?: CallOverrides): Promise<string>;

    "token()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    Lock(token: string | null, from: string | null, amount: null): EventFilter;

    Unlock(token: string | null, to: string | null, amount: null): EventFilter;
  };

  estimateGas: {
    amount(overrides?: CallOverrides): Promise<BigNumber>;

    "amount()"(overrides?: CallOverrides): Promise<BigNumber>;

    collectFrom(_from: string, overrides?: Overrides): Promise<BigNumber>;

    "collectFrom(address)"(
      _from: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    releaseTo(_to: string, overrides?: Overrides): Promise<BigNumber>;

    "releaseTo(address)"(
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    token(overrides?: CallOverrides): Promise<BigNumber>;

    "token()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    amount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "amount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    collectFrom(
      _from: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "collectFrom(address)"(
      _from: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    releaseTo(
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "releaseTo(address)"(
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    token(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "token()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
