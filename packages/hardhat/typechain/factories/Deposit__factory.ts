/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Deposit } from "../Deposit";

export class Deposit__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<Deposit> {
    return super.deploy(_token, _amount, overrides || {}) as Promise<Deposit>;
  }
  getDeployTransaction(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _amount, overrides || {});
  }
  attach(address: string): Deposit {
    return super.attach(address) as Deposit;
  }
  connect(signer: Signer): Deposit__factory {
    return super.connect(signer) as Deposit__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Deposit {
    return new Contract(address, _abi, signerOrProvider) as Deposit;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Lock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unlock",
    type: "event",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "collectFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "releaseTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081338038061081383398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610090565b6000806040838503121561006a578182fd5b82516001600160a01b0381168114610080578283fd5b6020939093015192949293505050565b6107748061009f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633865aba414610051578063aa8c217c14610066578063d1fb564614610084578063fc0c546a14610097575b600080fd5b61006461005f3660046104df565b6100ac565b005b61006e61013c565b60405161007b9190610709565b60405180910390f35b6100646100923660046104df565b610142565b61009f6101c4565b60405161007b91906105a6565b60015415610139576001546000546100e09173ffffffffffffffffffffffffffffffffffffffff90911690839030906101e0565b60005460015460405173ffffffffffffffffffffffffffffffffffffffff8085169316917fec36c0364d931187a76cf66d7eee08fad0ec2e8b7458a8d8b26b36769d4d13f3916101309190610709565b60405180910390a35b50565b60015481565b60015415610139576001546000546101749173ffffffffffffffffffffffffffffffffffffffff909116908390610289565b60005460015460405173ffffffffffffffffffffffffffffffffffffffff8085169316917fc1c90b8e0705b212262c0dbd7580efe1862c2f185bf96899226f7596beb2db09916101309190610709565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b610283846323b872dd60e01b8585856040516024016102019392919061054f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526102ad565b50505050565b6102a88363a9059cbb60e01b8484604051602401610201929190610580565b505050565b600061030f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661036c9092919063ffffffff16565b8051909150156102a8578080602001905181019061032d9190610513565b6102a8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610363906106ac565b60405180910390fd5b606061037b8484600085610385565b90505b9392505050565b6060824710156103c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610618565b6103ca85610486565b610400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610675565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104299190610533565b60006040518083038185875af1925050503d8060008114610466576040519150601f19603f3d011682016040523d82523d6000602084013e61046b565b606091505b509150915061047b82828661048c565b979650505050505050565b3b151590565b6060831561049b57508161037e565b8251156104ab5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036391906105c7565b6000602082840312156104f0578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461037e578182fd5b600060208284031215610524578081fd5b8151801515811461037e578182fd5b60008251610545818460208701610712565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60006020825282518060208401526105e6816040850160208701610712565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60005b8381101561072d578181015183820152602001610715565b83811115610283575050600091015256fea2646970667358221220511af073f57b2590d6b52d9bb2fc33242fe8ca7c6b43ad0954dc69ebd9845f3b64736f6c63430008010033";
