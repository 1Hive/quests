/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Contract,
  ContractFactory,
  PayableOverrides,
} from "@ethersproject/contracts";

import type { TokenMock } from "../TokenMock";

export class TokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: PayableOverrides
  ): Promise<TokenMock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TokenMock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: PayableOverrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): TokenMock {
    return super.attach(address) as TokenMock;
  }
  connect(signer: Signer): TokenMock__factory {
    return super.connect(signer) as TokenMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMock {
    return new Contract(address, _abi, signerOrProvider) as TokenMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040516200193238038062001932833981810160405281019062000029919062000189565b818181600390805190602001906200004392919062000067565b5080600490805190602001906200005c92919062000067565b50505050506200036c565b828054620000759062000291565b90600052602060002090601f016020900481019282620000995760008555620000e5565b82601f10620000b457805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e4578251825591602001919060010190620000c7565b5b509050620000f49190620000f8565b5090565b5b8082111562000113576000816000905550600101620000f9565b5090565b60006200012e620001288462000225565b620001fc565b9050828152602081018484840111156200014757600080fd5b620001548482856200025b565b509392505050565b600082601f8301126200016e57600080fd5b81516200018084826020860162000117565b91505092915050565b600080604083850312156200019d57600080fd5b600083015167ffffffffffffffff811115620001b857600080fd5b620001c6858286016200015c565b925050602083015167ffffffffffffffff811115620001e457600080fd5b620001f2858286016200015c565b9150509250929050565b6000620002086200021b565b9050620002168282620002c7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024357620002426200032c565b5b6200024e826200035b565b9050602081019050919050565b60005b838110156200027b5780820151818401526020810190506200025e565b838111156200028b576000848401525b50505050565b60006002820490506001821680620002aa57607f821691505b60208210811415620002c157620002c0620002fd565b5b50919050565b620002d2826200035b565b810181811067ffffffffffffffff82111715620002f457620002f36200032c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6115b6806200037c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806340c10f1911610081578063a457c2d71161005b578063a457c2d71461022d578063a9059cbb1461025d578063dd62ed3e1461028d576100d4565b806340c10f19146101c357806370a08231146101df57806395d89b411461020f576100d4565b806323b872dd116100b257806323b872dd14610145578063313ce567146101755780633950935114610193576100d4565b806306fdde03146100d9578063095ea7b3146100f757806318160ddd14610127575b600080fd5b6100e16102bd565b6040516100ee919061100d565b60405180910390f35b610111600480360381019061010c9190610e38565b61034f565b60405161011e9190610ff2565b60405180910390f35b61012f61036d565b60405161013c919061112f565b60405180910390f35b61015f600480360381019061015a9190610de9565b610377565b60405161016c9190610ff2565b60405180910390f35b61017d61046f565b60405161018a919061114a565b60405180910390f35b6101ad60048036038101906101a89190610e38565b610478565b6040516101ba9190610ff2565b60405180910390f35b6101dd60048036038101906101d89190610e38565b610524565b005b6101f960048036038101906101f49190610d84565b610532565b604051610206919061112f565b60405180910390f35b61021761057a565b604051610224919061100d565b60405180910390f35b61024760048036038101906102429190610e38565b61060c565b6040516102549190610ff2565b60405180910390f35b61027760048036038101906102729190610e38565b6106f7565b6040516102849190610ff2565b60405180910390f35b6102a760048036038101906102a29190610dad565b610715565b6040516102b4919061112f565b60405180910390f35b6060600380546102cc9061125f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f89061125f565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61079c565b84846107a4565b6001905092915050565b6000600254905090565b600061038484848461096f565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103cf61079c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104469061108f565b60405180910390fd5b6104638561045b61079c565b8584036107a4565b60019150509392505050565b60006012905090565b600061051a61048561079c565b84846001600061049361079c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105159190611181565b6107a4565b6001905092915050565b61052e8282610bf0565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105899061125f565b80601f01602080910402602001604051908101604052809291908181526020018280546105b59061125f565b80156106025780601f106105d757610100808354040283529160200191610602565b820191906000526020600020905b8154815290600101906020018083116105e557829003601f168201915b5050505050905090565b6000806001600061061b61079c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf906110ef565b60405180910390fd5b6106ec6106e361079c565b858584036107a4565b600191505092915050565b600061070b61070461079c565b848461096f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b906110cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b9061104f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610962919061112f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d6906110af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a469061102f565b60405180910390fd5b610a5a838383610d50565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad79061106f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b739190611181565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd7919061112f565b60405180910390a3610bea848484610d55565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c579061110f565b60405180910390fd5b610c6c60008383610d50565b8060026000828254610c7e9190611181565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd39190611181565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d38919061112f565b60405180910390a3610d4c60008383610d55565b5050565b505050565b505050565b600081359050610d6981611552565b92915050565b600081359050610d7e81611569565b92915050565b600060208284031215610d9657600080fd5b6000610da484828501610d5a565b91505092915050565b60008060408385031215610dc057600080fd5b6000610dce85828601610d5a565b9250506020610ddf85828601610d5a565b9150509250929050565b600080600060608486031215610dfe57600080fd5b6000610e0c86828701610d5a565b9350506020610e1d86828701610d5a565b9250506040610e2e86828701610d6f565b9150509250925092565b60008060408385031215610e4b57600080fd5b6000610e5985828601610d5a565b9250506020610e6a85828601610d6f565b9150509250929050565b610e7d816111e9565b82525050565b6000610e8e82611165565b610e988185611170565b9350610ea881856020860161122c565b610eb1816112ef565b840191505092915050565b6000610ec9602383611170565b9150610ed482611300565b604082019050919050565b6000610eec602283611170565b9150610ef78261134f565b604082019050919050565b6000610f0f602683611170565b9150610f1a8261139e565b604082019050919050565b6000610f32602883611170565b9150610f3d826113ed565b604082019050919050565b6000610f55602583611170565b9150610f608261143c565b604082019050919050565b6000610f78602483611170565b9150610f838261148b565b604082019050919050565b6000610f9b602583611170565b9150610fa6826114da565b604082019050919050565b6000610fbe601f83611170565b9150610fc982611529565b602082019050919050565b610fdd81611215565b82525050565b610fec8161121f565b82525050565b60006020820190506110076000830184610e74565b92915050565b600060208201905081810360008301526110278184610e83565b905092915050565b6000602082019050818103600083015261104881610ebc565b9050919050565b6000602082019050818103600083015261106881610edf565b9050919050565b6000602082019050818103600083015261108881610f02565b9050919050565b600060208201905081810360008301526110a881610f25565b9050919050565b600060208201905081810360008301526110c881610f48565b9050919050565b600060208201905081810360008301526110e881610f6b565b9050919050565b6000602082019050818103600083015261110881610f8e565b9050919050565b6000602082019050818103600083015261112881610fb1565b9050919050565b60006020820190506111446000830184610fd4565b92915050565b600060208201905061115f6000830184610fe3565b92915050565b600081519050919050565b600082825260208201905092915050565b600061118c82611215565b915061119783611215565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111cc576111cb611291565b5b828201905092915050565b60006111e2826111f5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561124a57808201518184015260208101905061122f565b83811115611259576000848401525b50505050565b6000600282049050600182168061127757607f821691505b6020821081141561128b5761128a6112c0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61155b816111d7565b811461156657600080fd5b50565b61157281611215565b811461157d57600080fd5b5056fea2646970667358221220d8655be14e87b03a3858a000cc8c993dba0a3ee7f012db5fbefecd3e826a730664736f6c63430008010033";
