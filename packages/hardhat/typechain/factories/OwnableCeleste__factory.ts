/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OwnableCeleste } from "../OwnableCeleste";

export class OwnableCeleste__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _feeToken: string,
    _feeAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<OwnableCeleste> {
    return super.deploy(
      _feeToken,
      _feeAmount,
      overrides || {}
    ) as Promise<OwnableCeleste>;
  }
  getDeployTransaction(
    _feeToken: string,
    _feeAmount: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_feeToken, _feeAmount, overrides || {});
  }
  attach(address: string): OwnableCeleste {
    return super.attach(address) as OwnableCeleste;
  }
  connect(signer: Signer): OwnableCeleste__factory {
    return super.connect(signer) as OwnableCeleste__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableCeleste {
    return new Contract(address, _abi, signerOrProvider) as OwnableCeleste;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_disputeId",
        type: "uint256",
      },
      {
        name: "_state",
        type: "uint8",
      },
    ],
    name: "decideDispute",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "disputes",
    outputs: [
      {
        name: "subject",
        type: "address",
      },
      {
        name: "state",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "feeAmount",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getDisputeFees",
    outputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_disputeId",
        type: "uint256",
      },
      {
        name: "_submitter",
        type: "address",
      },
      {
        name: "_evidence",
        type: "bytes",
      },
    ],
    name: "submitEvidence",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "closeEvidencePeriod",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "computeRuling",
    outputs: [
      {
        name: "subject",
        type: "address",
      },
      {
        name: "finalRuling",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_possibleRulings",
        type: "uint256",
      },
      {
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "createDispute",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "rule",
    outputs: [
      {
        name: "subject",
        type: "address",
      },
      {
        name: "ruling",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getDisputeManager",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "currentId",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_feeToken",
        type: "address",
      },
      {
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516040806110588339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050610f74806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637e9adccf1161008c578063c13517e111610066578063c13517e11461047b578063db18af6c14610512578063db9bee4614610587578063e00dd161146105d1576100ea565b80637e9adccf146103805780638da5cb5b146103ae578063bd881e53146103f8576100ea565b8063647846a5116100c8578063647846a5146101f157806369e154041461023b5780637b751b9e146102595780637cb57c64146102dd576100ea565b806313af4035146100ef5780631da213f214610133578063564a565d1461016e575b600080fd5b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ef565b005b61016c6004803603604081101561014957600080fd5b8101908080359060200190929190803560ff1690602001909291905050506106f6565b005b61019a6004803603602081101561018457600080fd5b8101908080359060200190929190505050610947565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260048111156101dc57fe5b60ff1681526020019250505060405180910390f35b6101f9610998565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102436109bd565b6040518082815260200191505060405180910390f35b6102616109c3565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b61037e600480360360608110156102f357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561033a57600080fd5b82018360208201111561034c57600080fd5b8035906020019184600183028401116401000000008311171561036e57600080fd5b90919293919293905050506109f9565b005b6103ac6004803603602081101561039657600080fd5b81019080803590602001909291905050506109ff565b005b6103b6610a02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104246004803603602081101561040e57600080fd5b8101908080359060200190929190505050610a28565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600481111561046657fe5b60ff1681526020019250505060405180910390f35b6104fc6004803603604081101561049157600080fd5b8101908080359060200190929190803590602001906401000000008111156104b857600080fd5b8201836020820111156104ca57600080fd5b803590602001918460018302840111640100000000831117156104ec57600080fd5b9091929391929390505050610a83565b6040518082815260200191505060405180910390f35b61053e6004803603602081101561052857600080fd5b8101908080359060200190929190505050610c27565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b61058f610dd6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d9610dde565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b600060048111156107c657fe5b8160048111156107d257fe5b141580156107f75750600160048111156107e857fe5b8160048111156107f457fe5b14155b610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4552523a4f5554434f4d455f4e4f545f41535349474e41424c4500000000000081525060200191505060405180910390fd5b60006004600084815260200190815260200160002090506001600481111561088d57fe5b8160000160149054906101000a900460ff1660048111156108aa57fe5b1461091d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4552523a4e4f545f44495350555445440000000000000000000000000000000081525060200191505060405180910390fd5b818160000160146101000a81548160ff0219169083600481111561093d57fe5b0217905550505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806000306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154925092509250909192565b50505050565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006004600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508060000160149054906101000a900460ff16915050915091565b600080600254905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160016004811115610abf57fe5b8152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836004811115610b4057fe5b0217905550905050600260008154809291906001019190505550610baa33306001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610de4909392919063ffffffff16565b610c1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552523a4445504f5349545f4641494c4544000000000000000000000000000081525060200191505060405180910390fd5b809150509392505050565b600080600060046000858152602001908152602001600020905060036004811115610c4e57fe5b8160000160149054906101000a900460ff166004811115610c6b57fe5b1415610ca2578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660039250925050610dd1565b600480811115610cae57fe5b8160000160149054906101000a900460ff166004811115610ccb57fe5b1415610d02578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660049250925050610dd1565b60026004811115610d0f57fe5b8160000160149054906101000a900460ff166004811115610d2c57fe5b1415610d63578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660009250925050610dd1565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f554e45585045435445445f53544154450000000000000000000000000000000081525060200191505060405180910390fd5b915091565b600030905090565b60025481565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610eeb8682610ef6565b915050949350505050565b6000806040516020818551602087016000895af16000811115610f3c573d60008114610f295760208114610f3257610f3a565b60019350610f3a565b600183511493505b505b5050809150509291505056fea165627a7a723058202d8cb9b131239852c5b4a8f38ea13ecd03934eb8de33354560669bb4abb39cb50029";
