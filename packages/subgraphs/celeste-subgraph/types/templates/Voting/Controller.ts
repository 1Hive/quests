// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ModuleSet extends ethereum.Event {
  get params(): ModuleSet__Params {
    return new ModuleSet__Params(this);
  }
}

export class ModuleSet__Params {
  _event: ModuleSet;

  constructor(event: ModuleSet) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundsGovernorChanged extends ethereum.Event {
  get params(): FundsGovernorChanged__Params {
    return new FundsGovernorChanged__Params(this);
  }
}

export class FundsGovernorChanged__Params {
  _event: FundsGovernorChanged;

  constructor(event: FundsGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ConfigGovernorChanged extends ethereum.Event {
  get params(): ConfigGovernorChanged__Params {
    return new ConfigGovernorChanged__Params(this);
  }
}

export class ConfigGovernorChanged__Params {
  _event: ConfigGovernorChanged;

  constructor(event: ConfigGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ModulesGovernorChanged extends ethereum.Event {
  get params(): ModulesGovernorChanged__Params {
    return new ModulesGovernorChanged__Params(this);
  }
}

export class ModulesGovernorChanged__Params {
  _event: ModulesGovernorChanged;

  constructor(event: ModulesGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewConfig extends ethereum.Event {
  get params(): NewConfig__Params {
    return new NewConfig__Params(this);
  }
}

export class NewConfig__Params {
  _event: NewConfig;

  constructor(event: NewConfig) {
    this._event = event;
  }

  get fromTermId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get courtConfigId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AutomaticWithdrawalsAllowedChanged extends ethereum.Event {
  get params(): AutomaticWithdrawalsAllowedChanged__Params {
    return new AutomaticWithdrawalsAllowedChanged__Params(this);
  }
}

export class AutomaticWithdrawalsAllowedChanged__Params {
  _event: AutomaticWithdrawalsAllowedChanged;

  constructor(event: AutomaticWithdrawalsAllowedChanged) {
    this._event = event;
  }

  get holder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Heartbeat extends ethereum.Event {
  get params(): Heartbeat__Params {
    return new Heartbeat__Params(this);
  }
}

export class Heartbeat__Params {
  _event: Heartbeat;

  constructor(event: Heartbeat) {
    this._event = event;
  }

  get previousTermId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currentTermId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartTimeDelayed extends ethereum.Event {
  get params(): StartTimeDelayed__Params {
    return new StartTimeDelayed__Params(this);
  }
}

export class StartTimeDelayed__Params {
  _event: StartTimeDelayed;

  constructor(event: StartTimeDelayed) {
    this._event = event;
  }

  get previousStartTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currentStartTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Controller__getTermResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;

  constructor(value0: BigInt, value1: BigInt, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    return map;
  }
}

export class Controller__getConfigResult {
  value0: Address;
  value1: Array<BigInt>;
  value2: Array<BigInt>;
  value3: Array<i32>;
  value4: Array<BigInt>;
  value5: Array<BigInt>;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: Array<BigInt>,
    value2: Array<BigInt>,
    value3: Array<i32>,
    value4: Array<BigInt>,
    value5: Array<BigInt>,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigIntArray(this.value2));
    map.set("value3", ethereum.Value.fromI32Array(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigIntArray(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigIntArray(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class Controller__getDraftConfigResult {
  value0: Address;
  value1: BigInt;
  value2: i32;

  constructor(value0: Address, value1: BigInt, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }
}

export class Controller extends ethereum.SmartContract {
  static bind(address: Address): Controller {
    return new Controller("Controller", address);
  }

  getCurrentTermId(): BigInt {
    let result = super.call(
      "getCurrentTermId",
      "getCurrentTermId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentTermId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentTermId",
      "getCurrentTermId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTermDuration(): BigInt {
    let result = super.call(
      "getTermDuration",
      "getTermDuration():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTermDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTermDuration",
      "getTermDuration():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  areWithdrawalsAllowedFor(_holder: Address): boolean {
    let result = super.call(
      "areWithdrawalsAllowedFor",
      "areWithdrawalsAllowedFor(address):(bool)",
      [ethereum.Value.fromAddress(_holder)]
    );

    return result[0].toBoolean();
  }

  try_areWithdrawalsAllowedFor(_holder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "areWithdrawalsAllowedFor",
      "areWithdrawalsAllowedFor(address):(bool)",
      [ethereum.Value.fromAddress(_holder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ensureCurrentTerm(): BigInt {
    let result = super.call(
      "ensureCurrentTerm",
      "ensureCurrentTerm():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_ensureCurrentTerm(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ensureCurrentTerm",
      "ensureCurrentTerm():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNeededTermTransitions(): BigInt {
    let result = super.call(
      "getNeededTermTransitions",
      "getNeededTermTransitions():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNeededTermTransitions(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNeededTermTransitions",
      "getNeededTermTransitions():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTermRandomness(_termId: BigInt): Bytes {
    let result = super.call(
      "getTermRandomness",
      "getTermRandomness(uint64):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return result[0].toBytes();
  }

  try_getTermRandomness(_termId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getTermRandomness",
      "getTermRandomness(uint64):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getConfigChangeTermId(): BigInt {
    let result = super.call(
      "getConfigChangeTermId",
      "getConfigChangeTermId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getConfigChangeTermId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getConfigChangeTermId",
      "getConfigChangeTermId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ensureCurrentTermRandomness(): Bytes {
    let result = super.call(
      "ensureCurrentTermRandomness",
      "ensureCurrentTermRandomness():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ensureCurrentTermRandomness(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ensureCurrentTermRandomness",
      "ensureCurrentTermRandomness():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  heartbeat(_maxRequestedTransitions: BigInt): BigInt {
    let result = super.call("heartbeat", "heartbeat(uint64):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(_maxRequestedTransitions)
    ]);

    return result[0].toBigInt();
  }

  try_heartbeat(_maxRequestedTransitions: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("heartbeat", "heartbeat(uint64):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(_maxRequestedTransitions)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTerm(_termId: BigInt): Controller__getTermResult {
    let result = super.call(
      "getTerm",
      "getTerm(uint64):(uint64,uint64,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return new Controller__getTermResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes()
    );
  }

  try_getTerm(_termId: BigInt): ethereum.CallResult<Controller__getTermResult> {
    let result = super.tryCall(
      "getTerm",
      "getTerm(uint64):(uint64,uint64,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getTermResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes()
      )
    );
  }

  getLastEnsuredTermId(): BigInt {
    let result = super.call(
      "getLastEnsuredTermId",
      "getLastEnsuredTermId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastEnsuredTermId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastEnsuredTermId",
      "getLastEnsuredTermId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getConfig(_termId: BigInt): Controller__getConfigResult {
    let result = super.call(
      "getConfig",
      "getConfig(uint64):(address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return new Controller__getConfigResult(
      result[0].toAddress(),
      result[1].toBigIntArray(),
      result[2].toBigIntArray(),
      result[3].toI32Array(),
      result[4].toBigIntArray(),
      result[5].toBigIntArray(),
      result[6].toBigInt()
    );
  }

  try_getConfig(
    _termId: BigInt
  ): ethereum.CallResult<Controller__getConfigResult> {
    let result = super.tryCall(
      "getConfig",
      "getConfig(uint64):(address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getConfigResult(
        value[0].toAddress(),
        value[1].toBigIntArray(),
        value[2].toBigIntArray(),
        value[3].toI32Array(),
        value[4].toBigIntArray(),
        value[5].toBigIntArray(),
        value[6].toBigInt()
      )
    );
  }

  getDraftConfig(_termId: BigInt): Controller__getDraftConfigResult {
    let result = super.call(
      "getDraftConfig",
      "getDraftConfig(uint64):(address,uint256,uint16)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return new Controller__getDraftConfigResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toI32()
    );
  }

  try_getDraftConfig(
    _termId: BigInt
  ): ethereum.CallResult<Controller__getDraftConfigResult> {
    let result = super.tryCall(
      "getDraftConfig",
      "getDraftConfig(uint64):(address,uint256,uint16)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getDraftConfigResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toI32()
      )
    );
  }

  getMinActiveBalance(_termId: BigInt): BigInt {
    let result = super.call(
      "getMinActiveBalance",
      "getMinActiveBalance(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return result[0].toBigInt();
  }

  try_getMinActiveBalance(_termId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinActiveBalance",
      "getMinActiveBalance(uint64):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFundsGovernor(): Address {
    let result = super.call(
      "getFundsGovernor",
      "getFundsGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFundsGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFundsGovernor",
      "getFundsGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getConfigGovernor(): Address {
    let result = super.call(
      "getConfigGovernor",
      "getConfigGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getConfigGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getConfigGovernor",
      "getConfigGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getModulesGovernor(): Address {
    let result = super.call(
      "getModulesGovernor",
      "getModulesGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getModulesGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getModulesGovernor",
      "getModulesGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getModule(_id: Bytes): Address {
    let result = super.call("getModule", "getModule(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);

    return result[0].toAddress();
  }

  try_getModule(_id: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getModule", "getModule(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDisputeManager(): Address {
    let result = super.call(
      "getDisputeManager",
      "getDisputeManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getDisputeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDisputeManager",
      "getDisputeManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTreasury(): Address {
    let result = super.call("getTreasury", "getTreasury():(address)", []);

    return result[0].toAddress();
  }

  try_getTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("getTreasury", "getTreasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVoting(): Address {
    let result = super.call("getVoting", "getVoting():(address)", []);

    return result[0].toAddress();
  }

  try_getVoting(): ethereum.CallResult<Address> {
    let result = super.tryCall("getVoting", "getVoting():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getJurorsRegistry(): Address {
    let result = super.call(
      "getJurorsRegistry",
      "getJurorsRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getJurorsRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getJurorsRegistry",
      "getJurorsRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubscriptions(): Address {
    let result = super.call(
      "getSubscriptions",
      "getSubscriptions():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSubscriptions(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSubscriptions",
      "getSubscriptions():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class EnsureCurrentTermCall extends ethereum.Call {
  get inputs(): EnsureCurrentTermCall__Inputs {
    return new EnsureCurrentTermCall__Inputs(this);
  }

  get outputs(): EnsureCurrentTermCall__Outputs {
    return new EnsureCurrentTermCall__Outputs(this);
  }
}

export class EnsureCurrentTermCall__Inputs {
  _call: EnsureCurrentTermCall;

  constructor(call: EnsureCurrentTermCall) {
    this._call = call;
  }
}

export class EnsureCurrentTermCall__Outputs {
  _call: EnsureCurrentTermCall;

  constructor(call: EnsureCurrentTermCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EnsureCurrentTermRandomnessCall extends ethereum.Call {
  get inputs(): EnsureCurrentTermRandomnessCall__Inputs {
    return new EnsureCurrentTermRandomnessCall__Inputs(this);
  }

  get outputs(): EnsureCurrentTermRandomnessCall__Outputs {
    return new EnsureCurrentTermRandomnessCall__Outputs(this);
  }
}

export class EnsureCurrentTermRandomnessCall__Inputs {
  _call: EnsureCurrentTermRandomnessCall;

  constructor(call: EnsureCurrentTermRandomnessCall) {
    this._call = call;
  }
}

export class EnsureCurrentTermRandomnessCall__Outputs {
  _call: EnsureCurrentTermRandomnessCall;

  constructor(call: EnsureCurrentTermRandomnessCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class SetAutomaticWithdrawalsCall extends ethereum.Call {
  get inputs(): SetAutomaticWithdrawalsCall__Inputs {
    return new SetAutomaticWithdrawalsCall__Inputs(this);
  }

  get outputs(): SetAutomaticWithdrawalsCall__Outputs {
    return new SetAutomaticWithdrawalsCall__Outputs(this);
  }
}

export class SetAutomaticWithdrawalsCall__Inputs {
  _call: SetAutomaticWithdrawalsCall;

  constructor(call: SetAutomaticWithdrawalsCall) {
    this._call = call;
  }

  get _allowed(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetAutomaticWithdrawalsCall__Outputs {
  _call: SetAutomaticWithdrawalsCall;

  constructor(call: SetAutomaticWithdrawalsCall) {
    this._call = call;
  }
}

export class HeartbeatCall extends ethereum.Call {
  get inputs(): HeartbeatCall__Inputs {
    return new HeartbeatCall__Inputs(this);
  }

  get outputs(): HeartbeatCall__Outputs {
    return new HeartbeatCall__Outputs(this);
  }
}

export class HeartbeatCall__Inputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }

  get _maxRequestedTransitions(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class HeartbeatCall__Outputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _termParams(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _governors(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _feeToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _fees(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _roundStateDurations(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _pcts(): Array<i32> {
    return this._call.inputValues[5].value.toI32Array();
  }

  get _roundParams(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }

  get _appealCollateralParams(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }

  get _minActiveBalance(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _fromTermId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _feeToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fees(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _roundStateDurations(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _pcts(): Array<i32> {
    return this._call.inputValues[4].value.toI32Array();
  }

  get _roundParams(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _appealCollateralParams(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }

  get _minActiveBalance(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class DelayStartTimeCall extends ethereum.Call {
  get inputs(): DelayStartTimeCall__Inputs {
    return new DelayStartTimeCall__Inputs(this);
  }

  get outputs(): DelayStartTimeCall__Outputs {
    return new DelayStartTimeCall__Outputs(this);
  }
}

export class DelayStartTimeCall__Inputs {
  _call: DelayStartTimeCall;

  constructor(call: DelayStartTimeCall) {
    this._call = call;
  }

  get _newFirstTermStartTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DelayStartTimeCall__Outputs {
  _call: DelayStartTimeCall;

  constructor(call: DelayStartTimeCall) {
    this._call = call;
  }
}

export class ChangeFundsGovernorCall extends ethereum.Call {
  get inputs(): ChangeFundsGovernorCall__Inputs {
    return new ChangeFundsGovernorCall__Inputs(this);
  }

  get outputs(): ChangeFundsGovernorCall__Outputs {
    return new ChangeFundsGovernorCall__Outputs(this);
  }
}

export class ChangeFundsGovernorCall__Inputs {
  _call: ChangeFundsGovernorCall;

  constructor(call: ChangeFundsGovernorCall) {
    this._call = call;
  }

  get _newFundsGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeFundsGovernorCall__Outputs {
  _call: ChangeFundsGovernorCall;

  constructor(call: ChangeFundsGovernorCall) {
    this._call = call;
  }
}

export class ChangeConfigGovernorCall extends ethereum.Call {
  get inputs(): ChangeConfigGovernorCall__Inputs {
    return new ChangeConfigGovernorCall__Inputs(this);
  }

  get outputs(): ChangeConfigGovernorCall__Outputs {
    return new ChangeConfigGovernorCall__Outputs(this);
  }
}

export class ChangeConfigGovernorCall__Inputs {
  _call: ChangeConfigGovernorCall;

  constructor(call: ChangeConfigGovernorCall) {
    this._call = call;
  }

  get _newConfigGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeConfigGovernorCall__Outputs {
  _call: ChangeConfigGovernorCall;

  constructor(call: ChangeConfigGovernorCall) {
    this._call = call;
  }
}

export class ChangeModulesGovernorCall extends ethereum.Call {
  get inputs(): ChangeModulesGovernorCall__Inputs {
    return new ChangeModulesGovernorCall__Inputs(this);
  }

  get outputs(): ChangeModulesGovernorCall__Outputs {
    return new ChangeModulesGovernorCall__Outputs(this);
  }
}

export class ChangeModulesGovernorCall__Inputs {
  _call: ChangeModulesGovernorCall;

  constructor(call: ChangeModulesGovernorCall) {
    this._call = call;
  }

  get _newModulesGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeModulesGovernorCall__Outputs {
  _call: ChangeModulesGovernorCall;

  constructor(call: ChangeModulesGovernorCall) {
    this._call = call;
  }
}

export class EjectFundsGovernorCall extends ethereum.Call {
  get inputs(): EjectFundsGovernorCall__Inputs {
    return new EjectFundsGovernorCall__Inputs(this);
  }

  get outputs(): EjectFundsGovernorCall__Outputs {
    return new EjectFundsGovernorCall__Outputs(this);
  }
}

export class EjectFundsGovernorCall__Inputs {
  _call: EjectFundsGovernorCall;

  constructor(call: EjectFundsGovernorCall) {
    this._call = call;
  }
}

export class EjectFundsGovernorCall__Outputs {
  _call: EjectFundsGovernorCall;

  constructor(call: EjectFundsGovernorCall) {
    this._call = call;
  }
}

export class EjectModulesGovernorCall extends ethereum.Call {
  get inputs(): EjectModulesGovernorCall__Inputs {
    return new EjectModulesGovernorCall__Inputs(this);
  }

  get outputs(): EjectModulesGovernorCall__Outputs {
    return new EjectModulesGovernorCall__Outputs(this);
  }
}

export class EjectModulesGovernorCall__Inputs {
  _call: EjectModulesGovernorCall;

  constructor(call: EjectModulesGovernorCall) {
    this._call = call;
  }
}

export class EjectModulesGovernorCall__Outputs {
  _call: EjectModulesGovernorCall;

  constructor(call: EjectModulesGovernorCall) {
    this._call = call;
  }
}

export class SetModuleCall extends ethereum.Call {
  get inputs(): SetModuleCall__Inputs {
    return new SetModuleCall__Inputs(this);
  }

  get outputs(): SetModuleCall__Outputs {
    return new SetModuleCall__Outputs(this);
  }
}

export class SetModuleCall__Inputs {
  _call: SetModuleCall;

  constructor(call: SetModuleCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _addr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetModuleCall__Outputs {
  _call: SetModuleCall;

  constructor(call: SetModuleCall) {
    this._call = call;
  }
}

export class SetModulesCall extends ethereum.Call {
  get inputs(): SetModulesCall__Inputs {
    return new SetModulesCall__Inputs(this);
  }

  get outputs(): SetModulesCall__Outputs {
    return new SetModulesCall__Outputs(this);
  }
}

export class SetModulesCall__Inputs {
  _call: SetModulesCall;

  constructor(call: SetModulesCall) {
    this._call = call;
  }

  get _ids(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SetModulesCall__Outputs {
  _call: SetModulesCall;

  constructor(call: SetModulesCall) {
    this._call = call;
  }
}
