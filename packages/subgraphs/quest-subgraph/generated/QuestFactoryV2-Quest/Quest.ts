// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class QuestClaimed extends ethereum.Event {
  get params(): QuestClaimed__Params {
    return new QuestClaimed__Params(this);
  }
}

export class QuestClaimed__Params {
  _event: QuestClaimed;

  constructor(event: QuestClaimed) {
    this._event = event;
  }

  get evidence(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get player(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class QuestPlayed extends ethereum.Event {
  get params(): QuestPlayed__Params {
    return new QuestPlayed__Params(this);
  }
}

export class QuestPlayed__Params {
  _event: QuestPlayed;

  constructor(event: QuestPlayed) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class QuestUnplayed extends ethereum.Event {
  get params(): QuestUnplayed__Params {
    return new QuestUnplayed__Params(this);
  }
}

export class QuestUnplayed__Params {
  _event: QuestUnplayed;

  constructor(event: QuestUnplayed) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Quest__claimsResult {
  value0: Bytes;
  value1: Address;
  value2: BigInt;

  constructor(value0: Bytes, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Quest__createDepositResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Quest__playDepositResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Quest extends ethereum.SmartContract {
  static bind(address: Address): Quest {
    return new Quest("Quest", address);
  }

  aragonGovernAddress(): Address {
    let result = super.call(
      "aragonGovernAddress",
      "aragonGovernAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_aragonGovernAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "aragonGovernAddress",
      "aragonGovernAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  canExecute(executer: Address): boolean {
    let result = super.call("canExecute", "canExecute(address):(bool)", [
      ethereum.Value.fromAddress(executer)
    ]);

    return result[0].toBoolean();
  }

  try_canExecute(executer: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("canExecute", "canExecute(address):(bool)", [
      ethereum.Value.fromAddress(executer)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  claims(param0: BigInt): Quest__claimsResult {
    let result = super.call(
      "claims",
      "claims(uint256):(bytes,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Quest__claimsResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_claims(param0: BigInt): ethereum.CallResult<Quest__claimsResult> {
    let result = super.tryCall(
      "claims",
      "claims(uint256):(bytes,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Quest__claimsResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  createDeposit(): Quest__createDepositResult {
    let result = super.call(
      "createDeposit",
      "createDeposit():(address,uint256)",
      []
    );

    return new Quest__createDepositResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_createDeposit(): ethereum.CallResult<Quest__createDepositResult> {
    let result = super.tryCall(
      "createDeposit",
      "createDeposit():(address,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Quest__createDepositResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  expireTime(): BigInt {
    let result = super.call("expireTime", "expireTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_expireTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("expireTime", "expireTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundsRecoveryAddress(): Address {
    let result = super.call(
      "fundsRecoveryAddress",
      "fundsRecoveryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fundsRecoveryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fundsRecoveryAddress",
      "fundsRecoveryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPlayers(): Array<Address> {
    let result = super.call("getPlayers", "getPlayers():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getPlayers(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getPlayers", "getPlayers():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  isCreateDepositReleased(): boolean {
    let result = super.call(
      "isCreateDepositReleased",
      "isCreateDepositReleased():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isCreateDepositReleased(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCreateDepositReleased",
      "isCreateDepositReleased():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxPlayers(): BigInt {
    let result = super.call("maxPlayers", "maxPlayers():(uint32)", []);

    return result[0].toBigInt();
  }

  try_maxPlayers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxPlayers", "maxPlayers():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playDeposit(): Quest__playDepositResult {
    let result = super.call(
      "playDeposit",
      "playDeposit():(address,uint256)",
      []
    );

    return new Quest__playDepositResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_playDeposit(): ethereum.CallResult<Quest__playDepositResult> {
    let result = super.tryCall(
      "playDeposit",
      "playDeposit():(address,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Quest__playDepositResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  questCreator(): Address {
    let result = super.call("questCreator", "questCreator():(address)", []);

    return result[0].toAddress();
  }

  try_questCreator(): ethereum.CallResult<Address> {
    let result = super.tryCall("questCreator", "questCreator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  questDetailsRef(): Bytes {
    let result = super.call("questDetailsRef", "questDetailsRef():(bytes)", []);

    return result[0].toBytes();
  }

  try_questDetailsRef(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "questDetailsRef",
      "questDetailsRef():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  questTitle(): string {
    let result = super.call("questTitle", "questTitle():(string)", []);

    return result[0].toString();
  }

  try_questTitle(): ethereum.CallResult<string> {
    let result = super.tryCall("questTitle", "questTitle():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  rewardToken(): Address {
    let result = super.call("rewardToken", "rewardToken():(address)", []);

    return result[0].toAddress();
  }

  try_rewardToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("rewardToken", "rewardToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _questTitle(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _questDetailsRef(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _rewardToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _expireTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _aragonGovernAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _fundsRecoveryAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _createDeposit(): ConstructorCall_createDepositStruct {
    return changetype<ConstructorCall_createDepositStruct>(
      this._call.inputValues[6].value.toTuple()
    );
  }

  get _playDeposit(): ConstructorCall_playDepositStruct {
    return changetype<ConstructorCall_playDepositStruct>(
      this._call.inputValues[7].value.toTuple()
    );
  }

  get _questCreator(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _maxPlayers(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_createDepositStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class ConstructorCall_playDepositStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get _evidence(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _player(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _claimAll(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class PlayCall extends ethereum.Call {
  get inputs(): PlayCall__Inputs {
    return new PlayCall__Inputs(this);
  }

  get outputs(): PlayCall__Outputs {
    return new PlayCall__Outputs(this);
  }
}

export class PlayCall__Inputs {
  _call: PlayCall;

  constructor(call: PlayCall) {
    this._call = call;
  }

  get _player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PlayCall__Outputs {
  _call: PlayCall;

  constructor(call: PlayCall) {
    this._call = call;
  }
}

export class RecoverFundsAndDepositCall extends ethereum.Call {
  get inputs(): RecoverFundsAndDepositCall__Inputs {
    return new RecoverFundsAndDepositCall__Inputs(this);
  }

  get outputs(): RecoverFundsAndDepositCall__Outputs {
    return new RecoverFundsAndDepositCall__Outputs(this);
  }
}

export class RecoverFundsAndDepositCall__Inputs {
  _call: RecoverFundsAndDepositCall;

  constructor(call: RecoverFundsAndDepositCall) {
    this._call = call;
  }
}

export class RecoverFundsAndDepositCall__Outputs {
  _call: RecoverFundsAndDepositCall;

  constructor(call: RecoverFundsAndDepositCall) {
    this._call = call;
  }
}

export class UnplayCall extends ethereum.Call {
  get inputs(): UnplayCall__Inputs {
    return new UnplayCall__Inputs(this);
  }

  get outputs(): UnplayCall__Outputs {
    return new UnplayCall__Outputs(this);
  }
}

export class UnplayCall__Inputs {
  _call: UnplayCall;

  constructor(call: UnplayCall) {
    this._call = call;
  }

  get _player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnplayCall__Outputs {
  _call: UnplayCall;

  constructor(call: UnplayCall) {
    this._call = call;
  }
}
