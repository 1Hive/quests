{
  "4": {
    "rinkeby": {
      "name": "rinkeby",
      "chainId": "4",
      "contracts": {
        "Quest": {
          "address": "0x1035cb31e90b084876074F1A1acf7D4527ab3967",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_questTitle",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "_questDetailsRef",
                  "type": "bytes"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_expireTime",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_aragonGovernAddress",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "_fundsRecoveryAddress",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_depositToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_depositAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_questCreator",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "evidence",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "QuestClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "aragonGovernAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_evidence",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "_player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_claimAll",
                  "type": "bool"
                }
              ],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "claims",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "evidence",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "expireTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundsRecoveryAddress",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isDepositReleased",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "questCreator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "questDetailsRef",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "questTitle",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "recoverFundsAndDeposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        },
        "QuestFactory": {
          "address": "0x49230EAd7f26859Cce31bF6cC5836FA1B1725fBA",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_aragonGovernAddress",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_depositToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_depositAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "DepositChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "questAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "questTitle",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "questDetailsRef",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardTokenAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "expireTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "fundsRecoveryAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "depositToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "depositAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                }
              ],
              "name": "QuestCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "aragonGovernAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_questTitle",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "_questDetailsRef",
                  "type": "bytes"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_expireTime",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "_fundsRecoveryAddress",
                  "type": "address"
                }
              ],
              "name": "createQuest",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "setDeposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        },
        "TokenMock": {
          "address": "0x86E3f333Bb2AfE4b3da62e4DD8eeB0F8bFfa5FBe",
          "abi": [
            {
              "inputs": [],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialBalance",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        },
        "GovernQueue": {
          "address": "0xBf360A9be19A8467f10D97c63675Df4C87547694",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_aclRoot",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "executionDelay",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "scheduleDeposit",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "challengeDeposit",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "rules",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCalldataSize",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Config",
                  "name": "_initialConfig",
                  "type": "tuple"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "reason",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "resolverId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct ERC3000Data.Collateral",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "name": "Challenged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "configHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "executionDelay",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "scheduleDeposit",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "challengeDeposit",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "rules",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCalldataSize",
                      "type": "uint256"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct ERC3000Data.Config",
                  "name": "config",
                  "type": "tuple"
                }
              ],
              "name": "Configured",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                }
              ],
              "name": "Frozen",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract IACLOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "name": "Granted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "key",
                  "type": "string"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "sig",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ReceivedCallback",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "sig",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "magicNumber",
                  "type": "bytes4"
                }
              ],
              "name": "RegisteredCallback",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "RegisteredStandard",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Resolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "Revoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IArbitrator",
                  "name": "arbitrator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ruling",
                  "type": "uint256"
                }
              ],
              "name": "Ruled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "executionTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "submitter",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC3000Executor",
                      "name": "executor",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Action[]",
                      "name": "actions",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "allowFailuresMap",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "proof",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct ERC3000Data.Payload",
                  "name": "payload",
                  "type": "tuple"
                }
              ],
              "name": "Scheduled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "reason",
                  "type": "bytes"
                }
              ],
              "name": "Vetoed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ROOT_ROLE",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ACLData.BulkOp",
                      "name": "op",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "role",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "address",
                      "name": "who",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ACLData.BulkItem[]",
                  "name": "items",
                  "type": "tuple[]"
                }
              ],
              "name": "bulk",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "executionTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "submitter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IERC3000Executor",
                          "name": "executor",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Action[]",
                          "name": "actions",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "allowFailuresMap",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Payload",
                      "name": "payload",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "executionDelay",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "scheduleDeposit",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "challengeDeposit",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "resolver",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "rules",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCalldataSize",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Config",
                      "name": "config",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Container",
                  "name": "_container",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "_reason",
                  "type": "bytes"
                }
              ],
              "name": "challenge",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "challengerCache",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "configHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "executionDelay",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "scheduleDeposit",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "challengeDeposit",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "rules",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCalldataSize",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Config",
                  "name": "_config",
                  "type": "tuple"
                }
              ],
              "name": "configure",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IArbitrator",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "disputeItemCache",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "executionTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "submitter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IERC3000Executor",
                          "name": "executor",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Action[]",
                          "name": "actions",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "allowFailuresMap",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Payload",
                      "name": "payload",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "executionDelay",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "scheduleDeposit",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "challengeDeposit",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "resolver",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "rules",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCalldataSize",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Config",
                      "name": "config",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Container",
                  "name": "_container",
                  "type": "tuple"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "failureMap",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes[]",
                  "name": "",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                }
              ],
              "name": "freeze",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                }
              ],
              "name": "grant",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                },
                {
                  "internalType": "contract IACLOracle",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "grantWithOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "initBlocks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_aclRoot",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "executionDelay",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "scheduleDeposit",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Collateral",
                      "name": "challengeDeposit",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "resolver",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "rules",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCalldataSize",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Config",
                  "name": "_initialConfig",
                  "type": "tuple"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                }
              ],
              "name": "isFrozen",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "queue",
              "outputs": [
                {
                  "internalType": "enum GovernQueueStateLib.State",
                  "name": "state",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "executionTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "submitter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IERC3000Executor",
                          "name": "executor",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Action[]",
                          "name": "actions",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "allowFailuresMap",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Payload",
                      "name": "payload",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "executionDelay",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "scheduleDeposit",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "challengeDeposit",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "resolver",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "rules",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCalldataSize",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Config",
                      "name": "config",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Container",
                  "name": "_container",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "_disputeId",
                  "type": "uint256"
                }
              ],
              "name": "resolve",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "failureMap",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes[]",
                  "name": "",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                }
              ],
              "name": "revoke",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "roles",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "executionTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "submitter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IERC3000Executor",
                          "name": "executor",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Action[]",
                          "name": "actions",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "allowFailuresMap",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Payload",
                      "name": "payload",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "executionDelay",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "scheduleDeposit",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "challengeDeposit",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "resolver",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "rules",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCalldataSize",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Config",
                      "name": "config",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Container",
                  "name": "_container",
                  "type": "tuple"
                }
              ],
              "name": "schedule",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "containerHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "executionTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "submitter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IERC3000Executor",
                          "name": "executor",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Action[]",
                          "name": "actions",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "allowFailuresMap",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes",
                          "name": "proof",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Payload",
                      "name": "payload",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "executionDelay",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "scheduleDeposit",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ERC3000Data.Collateral",
                          "name": "challengeDeposit",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "resolver",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "rules",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCalldataSize",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ERC3000Data.Config",
                      "name": "config",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Container",
                  "name": "_container",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "_reason",
                  "type": "bytes"
                }
              ],
              "name": "veto",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        },
        "Govern": {
          "address": "0x7881C66Fa323eabE8470b3c6Fa14259B9918baEA",
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialExecutor",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_reference",
                  "type": "string"
                }
              ],
              "name": "Deposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ETHDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct ERC3000Data.Action[]",
                  "name": "actions",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "memo",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "failureMap",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "execResults",
                  "type": "bytes[]"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                }
              ],
              "name": "Frozen",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract IACLOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "name": "Granted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "key",
                  "type": "string"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "sig",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ReceivedCallback",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "sig",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "magicNumber",
                  "type": "bytes4"
                }
              ],
              "name": "RegisteredCallback",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "RegisteredStandard",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes4",
                  "name": "role",
                  "type": "bytes4"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "actor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "Revoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "_reference",
                  "type": "string"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "ROOT_ROLE",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ACLData.BulkOp",
                      "name": "op",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "role",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "address",
                      "name": "who",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ACLData.BulkItem[]",
                  "name": "items",
                  "type": "tuple[]"
                }
              ],
              "name": "bulk",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_reference",
                  "type": "string"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ERC3000Data.Action[]",
                  "name": "actions",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "allowFailuresMap",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "memo",
                  "type": "bytes32"
                }
              ],
              "name": "exec",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes[]",
                  "name": "",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                }
              ],
              "name": "freeze",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                }
              ],
              "name": "grant",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                },
                {
                  "internalType": "contract IACLOracle",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "grantWithOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "initBlocks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialExecutor",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                }
              ],
              "name": "isFrozen",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes4",
                  "name": "_callbackSig",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes4",
                  "name": "_magicNumber",
                  "type": "bytes4"
                }
              ],
              "name": "registerStandardAndCallback",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_role",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "_who",
                  "type": "address"
                }
              ],
              "name": "revoke",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "roles",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ERC1271",
                  "name": "_signatureValidator",
                  "type": "address"
                }
              ],
              "name": "setSignatureValidator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_reference",
                  "type": "string"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        },
        "Celeste": {
          "_format": "hh-sol-artifact-1",
          "contractName": "OwnableCeleste",
          "sourceName": "contracts/mocks/OwnableCelesteMock.sol",
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_disputeId",
                  "type": "uint256"
                },
                {
                  "name": "_state",
                  "type": "uint8"
                }
              ],
              "name": "decideDispute",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "disputes",
              "outputs": [
                {
                  "name": "subject",
                  "type": "address"
                },
                {
                  "name": "state",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "feeToken",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "feeAmount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDisputeFees",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_disputeId",
                  "type": "uint256"
                },
                {
                  "name": "_submitter",
                  "type": "address"
                },
                {
                  "name": "_evidence",
                  "type": "bytes"
                }
              ],
              "name": "submitEvidence",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_disputeId",
                  "type": "uint256"
                }
              ],
              "name": "closeEvidencePeriod",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_possibleRulings",
                  "type": "uint256"
                },
                {
                  "name": "_metadata",
                  "type": "bytes"
                }
              ],
              "name": "createDispute",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_disputeId",
                  "type": "uint256"
                }
              ],
              "name": "rule",
              "outputs": [
                {
                  "name": "subject",
                  "type": "address"
                },
                {
                  "name": "ruling",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "currentId",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "name": "_feeToken",
                  "type": "address"
                },
                {
                  "name": "_feeAmount",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "bytecode": "0x608060405234801561001057600080fd5b506040516040806113068339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550306040516100e09061017a565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610132573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610187565b6103cb80610f3b83390190565b610da5806101966000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637cb57c64116100715780637cb57c64146102a75780637e9adccf1461034a5780638da5cb5b14610378578063c13517e1146103c2578063db18af6c14610459578063e00dd161146104ce576100b4565b806313af4035146100b95780631da213f2146100fd578063564a565d14610138578063647846a5146101bb57806369e15404146102055780637b751b9e14610223575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ec565b005b6101366004803603604081101561011357600080fd5b8101908080359060200190929190803560ff1690602001909291905050506105f3565b005b6101646004803603602081101561014e57600080fd5b8101908080359060200190929190505050610844565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260048111156101a657fe5b60ff1681526020019250505060405180910390f35b6101c3610895565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020d6108ba565b6040518082815260200191505060405180910390f35b61022b6108c0565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610348600480360360608110156102bd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561030457600080fd5b82018360208201111561031657600080fd5b8035906020019184600183028401116401000000008311171561033857600080fd5b90919293919293905050506108f6565b005b6103766004803603602081101561036057600080fd5b81019080803590602001909291905050506108fc565b005b6103806108ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610443600480360360408110156103d857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ff57600080fd5b82018360208201111561041157600080fd5b8035906020019184600183028401116401000000008311171561043357600080fd5b9091929391929390505050610925565b6040518082815260200191505060405180910390f35b6104856004803603602081101561046f57600080fd5b8101908080359060200190929190505050610ac9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6104d6610c0f565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b600060048111156106c357fe5b8160048111156106cf57fe5b141580156106f45750600160048111156106e557fe5b8160048111156106f157fe5b14155b610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4552523a4f5554434f4d455f4e4f545f41535349474e41424c4500000000000081525060200191505060405180910390fd5b60006004600084815260200190815260200160002090506001600481111561078a57fe5b8160000160149054906101000a900460ff1660048111156107a757fe5b1461081a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4552523a4e4f545f44495350555445440000000000000000000000000000000081525060200191505060405180910390fd5b818160000160146101000a81548160ff0219169083600481111561083a57fe5b0217905550505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806000306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154925092509250909192565b50505050565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600254905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561096157fe5b8152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360048111156109e257fe5b0217905550905050600260008154809291906001019190505550610a4c33306001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c15909392919063ffffffff16565b610abe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552523a4445504f5349545f4641494c4544000000000000000000000000000081525060200191505060405180910390fd5b809150509392505050565b600080600060046000858152602001908152602001600020905060036004811115610af057fe5b8160000160149054906101000a900460ff166004811115610b0d57fe5b1415610b44578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660039250925050610c0a565b600480811115610b5057fe5b8160000160149054906101000a900460ff166004811115610b6d57fe5b1415610ba4578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660049250925050610c0a565b60026004811115610bb157fe5b8160000160149054906101000a900460ff166004811115610bce57fe5b1415610c05578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660009250925050610c0a565b600080fd5b915091565b60025481565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610d1c8682610d27565b915050949350505050565b6000806040516020818551602087016000895af16000811115610d6d573d60008114610d5a5760208114610d6357610d6b565b60019350610d6b565b600183511493505b505b5050809150509291505056fea165627a7a72305820697e12a869a0eeec0f7c5608870b6039cfd06d423f475b65ee8438db8e8914140029608060405234801561001057600080fd5b506040516020806103cb8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061033a806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b751b9e1461003b578063e3a96cbd1461008c575b600080fd5b61004361014b565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6100b8600480360360208110156100a257600080fd5b810190808035906020019092919050505061021c565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1660ff16815260200185600481111561010657fe5b60ff1681526020018460ff1660ff1681526020018381526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b60008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b751b9e6040518163ffffffff1660e01b815260040160606040518083038186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d60608110156101e457600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092508181945094505050509091565b6000806000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d8a6040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d60408110156102c357600080fd5b8101908080519060200190929190805190602001909291905050509150915081600082600080600084945082925081915080905097509750975097509750975050509193955091939556fea165627a7a723058203c7412ebd48635cf122a1dbf7cbe1f4ab7b5832a1168746bab7b8064a4d43ccd0029",
          "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80637cb57c64116100715780637cb57c64146102a75780637e9adccf1461034a5780638da5cb5b14610378578063c13517e1146103c2578063db18af6c14610459578063e00dd161146104ce576100b4565b806313af4035146100b95780631da213f2146100fd578063564a565d14610138578063647846a5146101bb57806369e15404146102055780637b751b9e14610223575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ec565b005b6101366004803603604081101561011357600080fd5b8101908080359060200190929190803560ff1690602001909291905050506105f3565b005b6101646004803603602081101561014e57600080fd5b8101908080359060200190929190505050610844565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260048111156101a657fe5b60ff1681526020019250505060405180910390f35b6101c3610895565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020d6108ba565b6040518082815260200191505060405180910390f35b61022b6108c0565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610348600480360360608110156102bd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561030457600080fd5b82018360208201111561031657600080fd5b8035906020019184600183028401116401000000008311171561033857600080fd5b90919293919293905050506108f6565b005b6103766004803603602081101561036057600080fd5b81019080803590602001909291905050506108fc565b005b6103806108ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610443600480360360408110156103d857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ff57600080fd5b82018360208201111561041157600080fd5b8035906020019184600183028401116401000000008311171561043357600080fd5b9091929391929390505050610925565b6040518082815260200191505060405180910390f35b6104856004803603602081101561046f57600080fd5b8101908080359060200190929190505050610ac9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6104d6610c0f565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b600060048111156106c357fe5b8160048111156106cf57fe5b141580156106f45750600160048111156106e557fe5b8160048111156106f157fe5b14155b610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4552523a4f5554434f4d455f4e4f545f41535349474e41424c4500000000000081525060200191505060405180910390fd5b60006004600084815260200190815260200160002090506001600481111561078a57fe5b8160000160149054906101000a900460ff1660048111156107a757fe5b1461081a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4552523a4e4f545f44495350555445440000000000000000000000000000000081525060200191505060405180910390fd5b818160000160146101000a81548160ff0219169083600481111561083a57fe5b0217905550505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806000306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154925092509250909192565b50505050565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600254905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561096157fe5b8152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360048111156109e257fe5b0217905550905050600260008154809291906001019190505550610a4c33306001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c15909392919063ffffffff16565b610abe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552523a4445504f5349545f4641494c4544000000000000000000000000000081525060200191505060405180910390fd5b809150509392505050565b600080600060046000858152602001908152602001600020905060036004811115610af057fe5b8160000160149054906101000a900460ff166004811115610b0d57fe5b1415610b44578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660039250925050610c0a565b600480811115610b5057fe5b8160000160149054906101000a900460ff166004811115610b6d57fe5b1415610ba4578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660049250925050610c0a565b60026004811115610bb157fe5b8160000160149054906101000a900460ff166004811115610bce57fe5b1415610c05578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660009250925050610c0a565b600080fd5b915091565b60025481565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610d1c8682610d27565b915050949350505050565b6000806040516020818551602087016000895af16000811115610d6d573d60008114610d5a5760208114610d6357610d6b565b60019350610d6b565b600183511493505b505b5050809150509291505056fea165627a7a72305820697e12a869a0eeec0f7c5608870b6039cfd06d423f475b65ee8438db8e8914140029",
          "linkReferences": {},
          "deployedLinkReferences": {},
          "devdoc": {
            "methods": {
              "closeEvidencePeriod(uint256)": {
                "details": "Close the evidence period of a dispute\r",
                "params": {
                  "_disputeId": "Identification number of the dispute to close its evidence submitting period\r"
                }
              },
              "createDispute(uint256,bytes)": {
                "details": "Create a dispute over the Arbitrable sender with a number of possible rulings\r",
                "params": {
                  "_metadata": "Optional metadata that can be used to provide additional information on the dispute to be created\r",
                  "_possibleRulings": "Number of possible rulings allowed for the dispute\r"
                },
                "return": "Dispute identification number\r"
              },
              "getDisputeFees()": {
                "details": "Tell the dispute fees information to create a dispute\r",
                "return": "recipient Address where the corresponding dispute fees must be transferred to\rfeeToken ERC20 token used for the fees\rfeeAmount Total amount of fees that must be allowed to the recipient\r"
              },
              "rule(uint256)": {
                "params": {
                  "_disputeId": "Identification number of the dispute to be ruled\r"
                },
                "return": "subject Arbitrable instance associated to the dispute\rruling Ruling number computed for the given dispute\r"
              },
              "submitEvidence(uint256,address,bytes)": {
                "details": "Submit evidence for a dispute\r",
                "params": {
                  "_disputeId": "Id of the dispute in the Protocol\r",
                  "_evidence": "Data submitted for the evidence related to the dispute\r",
                  "_submitter": "Address of the account submitting the evidence\r"
                }
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516040806113068339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550306040516100e09061017a565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610132573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610187565b6103cb80610f3b83390190565b610da5806101966000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637cb57c64116100715780637cb57c64146102a75780637e9adccf1461034a5780638da5cb5b14610378578063c13517e1146103c2578063db18af6c14610459578063e00dd161146104ce576100b4565b806313af4035146100b95780631da213f2146100fd578063564a565d14610138578063647846a5146101bb57806369e15404146102055780637b751b9e14610223575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ec565b005b6101366004803603604081101561011357600080fd5b8101908080359060200190929190803560ff1690602001909291905050506105f3565b005b6101646004803603602081101561014e57600080fd5b8101908080359060200190929190505050610844565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260048111156101a657fe5b60ff1681526020019250505060405180910390f35b6101c3610895565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020d6108ba565b6040518082815260200191505060405180910390f35b61022b6108c0565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610348600480360360608110156102bd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561030457600080fd5b82018360208201111561031657600080fd5b8035906020019184600183028401116401000000008311171561033857600080fd5b90919293919293905050506108f6565b005b6103766004803603602081101561036057600080fd5b81019080803590602001909291905050506108fc565b005b6103806108ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610443600480360360408110156103d857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ff57600080fd5b82018360208201111561041157600080fd5b8035906020019184600183028401116401000000008311171561043357600080fd5b9091929391929390505050610925565b6040518082815260200191505060405180910390f35b6104856004803603602081101561046f57600080fd5b8101908080359060200190929190505050610ac9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6104d6610c0f565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b600060048111156106c357fe5b8160048111156106cf57fe5b141580156106f45750600160048111156106e557fe5b8160048111156106f157fe5b14155b610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4552523a4f5554434f4d455f4e4f545f41535349474e41424c4500000000000081525060200191505060405180910390fd5b60006004600084815260200190815260200160002090506001600481111561078a57fe5b8160000160149054906101000a900460ff1660048111156107a757fe5b1461081a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4552523a4e4f545f44495350555445440000000000000000000000000000000081525060200191505060405180910390fd5b818160000160146101000a81548160ff0219169083600481111561083a57fe5b0217905550505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806000306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154925092509250909192565b50505050565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600254905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561096157fe5b8152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360048111156109e257fe5b0217905550905050600260008154809291906001019190505550610a4c33306001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c15909392919063ffffffff16565b610abe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552523a4445504f5349545f4641494c4544000000000000000000000000000081525060200191505060405180910390fd5b809150509392505050565b600080600060046000858152602001908152602001600020905060036004811115610af057fe5b8160000160149054906101000a900460ff166004811115610b0d57fe5b1415610b44578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660039250925050610c0a565b600480811115610b5057fe5b8160000160149054906101000a900460ff166004811115610b6d57fe5b1415610ba4578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660049250925050610c0a565b60026004811115610bb157fe5b8160000160149054906101000a900460ff166004811115610bce57fe5b1415610c05578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660009250925050610c0a565b600080fd5b915091565b60025481565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610d1c8682610d27565b915050949350505050565b6000806040516020818551602087016000895af16000811115610d6d573d60008114610d5a5760208114610d6357610d6b565b60019350610d6b565b600183511493505b505b5050809150509291505056fea165627a7a72305820697e12a869a0eeec0f7c5608870b6039cfd06d423f475b65ee8438db8e8914140029608060405234801561001057600080fd5b506040516020806103cb8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061033a806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b751b9e1461003b578063e3a96cbd1461008c575b600080fd5b61004361014b565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6100b8600480360360208110156100a257600080fd5b810190808035906020019092919050505061021c565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1660ff16815260200185600481111561010657fe5b60ff1681526020018460ff1660ff1681526020018381526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b60008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b751b9e6040518163ffffffff1660e01b815260040160606040518083038186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d60608110156101e457600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092508181945094505050509091565b6000806000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d8a6040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d60408110156102c357600080fd5b8101908080519060200190929190805190602001909291905050509150915081600082600080600084945082925081915080905097509750975097509750975050509193955091939556fea165627a7a723058203c7412ebd48635cf122a1dbf7cbe1f4ab7b5832a1168746bab7b8064a4d43ccd0029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 PUSH2 0x1306 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP ADDRESS PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP1 PUSH2 0x17A JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x187 JUMP JUMPDEST PUSH2 0x3CB DUP1 PUSH2 0xF3B DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0xDA5 DUP1 PUSH2 0x196 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB57C64 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CB57C64 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x7E9ADCCF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDB18AF6C EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x4CE JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1DA213F2 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x69E15404 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x7B751B9E EQ PUSH2 0x223 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x8F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F4F574E455200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F4F574E455200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6CF JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x6F4 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6E5 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6F1 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4F5554434F4D455F4E4F545F41535349474E41424C45000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x78A JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI INVALID JUMPDEST EQ PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F444953505554454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x83A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADDRESS PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x961 JUMPI INVALID JUMPDEST DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9E2 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA4C CALLER ADDRESS PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC15 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4445504F5349545F4641494C45440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB0D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xB44 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xB50 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB6D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBB1 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBCE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xC05 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0xD1C DUP7 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0xD5A JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0xD63 JUMPI PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH10 0x7E12A869A0EEEC0F7C56 ADDMOD DUP8 SIGNEXTEND PUSH1 0x39 0xcf 0xd0 PUSH14 0x423F475B65EE8438DB8E89141400 0x29 PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x3CB DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x33A DUP1 PUSH2 0x91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B751B9E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE3A96CBD EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x106 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7B751B9E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP SWAP3 POP SWAP3 POP DUP2 DUP2 SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x564A565D DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SWAP5 POP DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 EXTCODECOPY PUSH21 0x12EBD48635CF122A1DBF7CBE1F4AB7B5832A116874 PUSH12 0xAB7B8064A4D43CCD00290000 ",
              "sourceMap": "6864:4987:0:-;;;8175:233;8:9:-1;5:2;;;30:1;27;20:12;5:2;8175:233:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8175:233:0;;;;;;;;;;;;;;;;;;;;;;;;;8256:10;8248:5;;:18;;;;;;;;;;;;;;;;;;8288:9;8277:8;;:20;;;;;;;;;;;;;;;;;;8320:10;8308:9;:22;;;;8393:4;8366:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8366:33:0;8341:14;;:59;;;;;;;;;;;;;;;;;;8175:233;;6864:4987;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80637cb57c64116100715780637cb57c64146102a75780637e9adccf1461034a5780638da5cb5b14610378578063c13517e1146103c2578063db18af6c14610459578063e00dd161146104ce576100b4565b806313af4035146100b95780631da213f2146100fd578063564a565d14610138578063647846a5146101bb57806369e15404146102055780637b751b9e14610223575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ec565b005b6101366004803603604081101561011357600080fd5b8101908080359060200190929190803560ff1690602001909291905050506105f3565b005b6101646004803603602081101561014e57600080fd5b8101908080359060200190929190505050610844565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260048111156101a657fe5b60ff1681526020019250505060405180910390f35b6101c3610895565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020d6108ba565b6040518082815260200191505060405180910390f35b61022b6108c0565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610348600480360360608110156102bd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561030457600080fd5b82018360208201111561031657600080fd5b8035906020019184600183028401116401000000008311171561033857600080fd5b90919293919293905050506108f6565b005b6103766004803603602081101561036057600080fd5b81019080803590602001909291905050506108fc565b005b6103806108ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610443600480360360408110156103d857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ff57600080fd5b82018360208201111561041157600080fd5b8035906020019184600183028401116401000000008311171561043357600080fd5b9091929391929390505050610925565b6040518082815260200191505060405180910390f35b6104856004803603602081101561046f57600080fd5b8101908080359060200190929190505050610ac9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6104d6610c0f565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4552523a4e4f545f4f574e45520000000000000000000000000000000000000081525060200191505060405180910390fd5b600060048111156106c357fe5b8160048111156106cf57fe5b141580156106f45750600160048111156106e557fe5b8160048111156106f157fe5b14155b610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4552523a4f5554434f4d455f4e4f545f41535349474e41424c4500000000000081525060200191505060405180910390fd5b60006004600084815260200190815260200160002090506001600481111561078a57fe5b8160000160149054906101000a900460ff1660048111156107a757fe5b1461081a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4552523a4e4f545f44495350555445440000000000000000000000000000000081525060200191505060405180910390fd5b818160000160146101000a81548160ff0219169083600481111561083a57fe5b0217905550505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806000306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154925092509250909192565b50505050565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600254905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561096157fe5b8152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360048111156109e257fe5b0217905550905050600260008154809291906001019190505550610a4c33306001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c15909392919063ffffffff16565b610abe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552523a4445504f5349545f4641494c4544000000000000000000000000000081525060200191505060405180910390fd5b809150509392505050565b600080600060046000858152602001908152602001600020905060036004811115610af057fe5b8160000160149054906101000a900460ff166004811115610b0d57fe5b1415610b44578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660039250925050610c0a565b600480811115610b5057fe5b8160000160149054906101000a900460ff166004811115610b6d57fe5b1415610ba4578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660049250925050610c0a565b60026004811115610bb157fe5b8160000160149054906101000a900460ff166004811115610bce57fe5b1415610c05578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660009250925050610c0a565b600080fd5b915091565b60025481565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610d1c8682610d27565b915050949350505050565b6000806040516020818551602087016000895af16000811115610d6d573d60008114610d5a5760208114610d6357610d6b565b60019350610d6b565b600183511493505b505b5050809150509291505056fea165627a7a72305820697e12a869a0eeec0f7c5608870b6039cfd06d423f475b65ee8438db8e8914140029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB57C64 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CB57C64 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x7E9ADCCF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xC13517E1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xDB18AF6C EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x4CE JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1DA213F2 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x69E15404 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x7B751B9E EQ PUSH2 0x223 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x8F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F4F574E455200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F4F574E455200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6CF JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x6F4 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6E5 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6F1 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4F5554434F4D455F4E4F545F41535349474E41424C45000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x78A JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI INVALID JUMPDEST EQ PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4E4F545F444953505554454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x83A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADDRESS PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x961 JUMPI INVALID JUMPDEST DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9E2 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA4C CALLER ADDRESS PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC15 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552523A4445504F5349545F4641494C45440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAF0 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB0D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xB44 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xB50 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB6D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBB1 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBCE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xC05 JUMPI DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP3 POP SWAP3 POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0xD1C DUP7 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0xD5A JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0xD63 JUMPI PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH10 0x7E12A869A0EEEC0F7C56 ADDMOD DUP8 SIGNEXTEND PUSH1 0x39 0xcf 0xd0 PUSH14 0x423F475B65EE8438DB8E89141400 0x29 ",
              "sourceMap": "6864:4987:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6864:4987:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8416:84;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8416:84:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;9311:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9311:415:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7989:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7989:43:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7866:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7900:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11624:224;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10008:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10008:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10008:135:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10008:135:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10008:135:0;;;;;;;;;;;;:::i;:::-;;10324:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10324:60:0;;;;;;;;;;;;;;;;;:::i;:::-;;7962:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8869:434;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8869:434:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8869:434:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8869:434:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8869:434:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10675:622;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10675:622:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7931:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8416:84;8124:5;;;;;;;;;;;8110:19;;:10;:19;;;8102:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8486:6;8478:5;;:14;;;;;;;;;;;;;;;;;;8416:84;:::o;9311:415::-;8124:5;;;;;;;;;;;8110:19;;:10;:19;;;8102:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9453:18;9443:28;;;;;;;;:6;:28;;;;;;;;;;:56;;;;;9485:14;9475:24;;;;;;;;:6;:24;;;;;;;;;;9443:56;9421:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9566:23;9592:8;:20;9601:10;9592:20;;;;;;;;;;;9566:46;;9648:14;9631:31;;;;;;;;:7;:13;;;;;;;;;;;;:31;;;;;;;;;9623:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9712:6;9696:7;:13;;;:22;;;;;;;;;;;;;;;;;;;;;;;;8158:1;9311:415;;:::o;7989:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7866:27::-;;;;;;;;;;;;;:::o;7900:24::-;;;;:::o;11624:224::-;11714:7;11736:11;11762:7;11813:4;11820:8;;;;;;;;;;;11830:9;;11797:43;;;;;;11624:224;;;:::o;10008:135::-;;;;;:::o;10324:60::-;;:::o;7962:20::-;;;;;;;;;;;;;:::o;8869:434::-;8980:7;9005:17;9025:9;;9005:29;;9067:35;;;;;;;;9075:10;9067:35;;;;;;9087:14;9067:35;;;;;;;;;;;9045:8;:19;9054:9;9045:19;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9113:9;;:11;;;;;;;;;;;;;9159:63;9185:10;9205:4;9212:9;;9159:8;;;;;;;;;;;:25;;;;:63;;;;;;:::i;:::-;9137:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9286:9;9279:16;;;8869:434;;;;;:::o;10675:622::-;10745:15;10762:14;10794:23;10820:8;:20;10829:10;10820:20;;;;;;;;;;;10794:46;;10874:32;10857:49;;;;;;;;:7;:13;;;;;;;;;;;;:49;;;;;;;;;10853:437;;;10931:7;:15;;;;;;;;;;;;7546:1;10923:52;;;;;;;10853:437;11014:31;10997:48;;;;;;;;:7;:13;;;;;;;;;;;;:48;;;;;;;;;10993:297;;;11070:7;:15;;;;;;;;;;;;7607:1;11062:51;;;;;;;10993:297;11152:24;11135:41;;;;;;;;:7;:13;;;;;;;;;;;;:41;;;;;;;;;11131:159;;;11201:7;:15;;;;;;;;;;;;7484:1;11193:44;;;;;;;11131:159;11270:8;;;10675:622;;;;:::o;7931:24::-;;;;:::o;4477:427::-;4629:4;4646:33;4719:6;:19;;;:28;;;;4762:5;4782:3;4800:7;4682:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4682:136:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;4682:136:0;4646:172;;4836:60;4866:6;4875:20;4836:21;:60::i;:::-;4829:67;;;4477:427;;;;;;:::o;5471:1302::-;5576:4;5598:8;5658:4;5652:11;6014:4;5959:3;5911:9;5905:16;5863:4;5852:9;5848:20;5816:1;5781:5;5740:3;5717:334;6082:1;6073:7;6070:14;6067:2;;;6186:14;6277:1;6272:57;;;;6409:4;6404:197;;;;6179:540;;6272:57;6309:1;6302:8;;6272:57;;6404:197;6580:1;6574:3;6568:10;6565:17;6558:24;;6179:540;;6067:2;5626:1119;;6762:3;6755:10;;;5471:1302;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "698600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "closeEvidencePeriod(uint256)": "250",
                "createDispute(uint256,bytes)": "infinite",
                "currentId()": "515",
                "decideDispute(uint256,uint8)": "21521",
                "disputes(uint256)": "1020",
                "feeAmount()": "494",
                "feeToken()": "520",
                "getDisputeFees()": "851",
                "owner()": "497",
                "rule(uint256)": "1885",
                "setOwner(address)": "20772",
                "submitEvidence(uint256,address,bytes)": "443"
              }
            },
            "methodIdentifiers": {
              "closeEvidencePeriod(uint256)": "7e9adccf",
              "createDispute(uint256,bytes)": "c13517e1",
              "currentId()": "e00dd161",
              "decideDispute(uint256,uint8)": "1da213f2",
              "disputes(uint256)": "564a565d",
              "feeAmount()": "69e15404",
              "feeToken()": "647846a5",
              "getDisputeFees()": "7b751b9e",
              "owner()": "8da5cb5b",
              "rule(uint256)": "db18af6c",
              "setOwner(address)": "13af4035",
              "submitEvidence(uint256,address,bytes)": "7cb57c64"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"decideDispute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputeFees\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_submitter\",\"type\":\"address\"},{\"name\":\"_evidence\",\"type\":\"bytes\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"closeEvidencePeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_possibleRulings\",\"type\":\"uint256\"},{\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"ruling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_feeToken\",\"type\":\"address\"},{\"name\":\"_feeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"closeEvidencePeriod(uint256)\":{\"details\":\"Close the evidence period of a dispute\\r\",\"params\":{\"_disputeId\":\"Identification number of the dispute to close its evidence submitting period\\r\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute over the Arbitrable sender with a number of possible rulings\\r\",\"params\":{\"_metadata\":\"Optional metadata that can be used to provide additional information on the dispute to be created\\r\",\"_possibleRulings\":\"Number of possible rulings allowed for the dispute\\r\"},\"return\":\"Dispute identification number\\r\"},\"getDisputeFees()\":{\"details\":\"Tell the dispute fees information to create a dispute\\r\",\"return\":\"recipient Address where the corresponding dispute fees must be transferred to\\rfeeToken ERC20 token used for the fees\\rfeeAmount Total amount of fees that must be allowed to the recipient\\r\"},\"rule(uint256)\":{\"params\":{\"_disputeId\":\"Identification number of the dispute to be ruled\\r\"},\"return\":\"subject Arbitrable instance associated to the dispute\\rruling Ruling number computed for the given dispute\\r\"},\"submitEvidence(uint256,address,bytes)\":{\"details\":\"Submit evidence for a dispute\\r\",\"params\":{\"_disputeId\":\"Id of the dispute in the Protocol\\r\",\"_evidence\":\"Data submitted for the evidence related to the dispute\\r\",\"_submitter\":\"Address of the account submitting the evidence\\r\"}}}},\"userdoc\":{\"methods\":{\"rule(uint256)\":{\"notice\":\"Rule dispute #`_disputeId` if ready\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/OwnableCelesteMock.sol\":\"OwnableCeleste\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/OwnableCelesteMock.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at Etherscan.io on 2022-01-07\\r\\n */\\r\\n\\r\\n// Brought from https://github.com/aragon/aragonOS/blob/v4.3.0/contracts/lib/token/ERC20.sol\\r\\n// Adapted to use pragma ^0.5.8 and satisfy our linter rules\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\ncontract GovernERC20 {\\r\\n    function totalSupply() public view returns (uint256);\\r\\n\\r\\n    function balanceOf(address _who) public view returns (uint256);\\r\\n\\r\\n    function allowance(address _owner, address _spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n// File: contracts/arbitration/IArbitrator.sol\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\ninterface IArbitrator {\\r\\n    /**\\r\\n     * @dev Create a dispute over the Arbitrable sender with a number of possible rulings\\r\\n     * @param _possibleRulings Number of possible rulings allowed for the dispute\\r\\n     * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\\r\\n     * @return Dispute identification number\\r\\n     */\\r\\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata)\\r\\n        external\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Submit evidence for a dispute\\r\\n     * @param _disputeId Id of the dispute in the Protocol\\r\\n     * @param _submitter Address of the account submitting the evidence\\r\\n     * @param _evidence Data submitted for the evidence related to the dispute\\r\\n     */\\r\\n    function submitEvidence(\\r\\n        uint256 _disputeId,\\r\\n        address _submitter,\\r\\n        bytes calldata _evidence\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Close the evidence period of a dispute\\r\\n     * @param _disputeId Identification number of the dispute to close its evidence submitting period\\r\\n     */\\r\\n    function closeEvidencePeriod(uint256 _disputeId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rule dispute #`_disputeId` if ready\\r\\n     * @param _disputeId Identification number of the dispute to be ruled\\r\\n     * @return subject Arbitrable instance associated to the dispute\\r\\n     * @return ruling Ruling number computed for the given dispute\\r\\n     */\\r\\n    function rule(uint256 _disputeId)\\r\\n        external\\r\\n        returns (address subject, uint256 ruling);\\r\\n\\r\\n    /**\\r\\n     * @dev Tell the dispute fees information to create a dispute\\r\\n     * @return recipient Address where the corresponding dispute fees must be transferred to\\r\\n     * @return feeToken ERC20 token used for the fees\\r\\n     * @return feeAmount Total amount of fees that must be allowed to the recipient\\r\\n     */\\r\\n    function getDisputeFees()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address recipient,\\r\\n            GovernERC20 feeToken,\\r\\n            uint256 feeAmount\\r\\n        );\\r\\n}\\r\\n\\r\\n// File: contracts/lib/os/SafeERC20.sol\\r\\n\\r\\n// Brought from https://github.com/aragon/aragonOS/blob/v4.3.0/contracts/common/SafeERC20.sol\\r\\n// Adapted to use pragma ^0.5.8 and satisfy our linter rules\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\nlibrary SafeGovernERC20 {\\r\\n    // Before 0.5, solidity has a mismatch between `address.transfer()` and `token.transfer()`:\\r\\n    // https://github.com/ethereum/solidity/issues/3544\\r\\n    bytes4 private constant TRANSFER_SELECTOR = 0xa9059cbb;\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.transfer() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeTransfer(\\r\\n        GovernERC20 _token,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory transferCallData = abi.encodeWithSelector(\\r\\n            TRANSFER_SELECTOR,\\r\\n            _to,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), transferCallData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.transferFrom() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeTransferFrom(\\r\\n        GovernERC20 _token,\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory transferFromCallData = abi.encodeWithSelector(\\r\\n            _token.transferFrom.selector,\\r\\n            _from,\\r\\n            _to,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), transferFromCallData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.approve() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeApprove(\\r\\n        GovernERC20 _token,\\r\\n        address _spender,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory approveCallData = abi.encodeWithSelector(\\r\\n            _token.approve.selector,\\r\\n            _spender,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), approveCallData);\\r\\n    }\\r\\n\\r\\n    function invokeAndCheckSuccess(address _addr, bytes memory _calldata)\\r\\n        private\\r\\n        returns (bool)\\r\\n    {\\r\\n        bool ret;\\r\\n        assembly {\\r\\n            let ptr := mload(0x40) // free memory pointer\\r\\n\\r\\n            let success := call(\\r\\n                gas, // forward all gas\\r\\n                _addr, // address\\r\\n                0, // no value\\r\\n                add(_calldata, 0x20), // calldata start\\r\\n                mload(_calldata), // calldata length\\r\\n                ptr, // write output over free memory\\r\\n                0x20 // uint256 return\\r\\n            )\\r\\n\\r\\n            if gt(success, 0) {\\r\\n                // Check number of bytes returned from last function call\\r\\n                switch returndatasize\\r\\n                // No bytes returned: assume success\\r\\n                case 0 {\\r\\n                    ret := 1\\r\\n                }\\r\\n                // 32 bytes returned: check if non-zero\\r\\n                case 0x20 {\\r\\n                    // Only return success if returned data was true\\r\\n                    // Already have output in ptr\\r\\n                    ret := eq(mload(ptr), 1)\\r\\n                }\\r\\n                // Not sure what was returned: don't mark as success\\r\\n                default {\\r\\n\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/ownable-celeste/OwnableCeleste.sol\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\ncontract OwnableCeleste is IArbitrator {\\r\\n    using SafeGovernERC20 for GovernERC20;\\r\\n\\r\\n    // Note that Aragon Court treats the possible outcomes as arbitrary numbers, leaving the Arbitrable (us) to define how to understand them.\\r\\n    // Some outcomes [0, 1, and 2] are reserved by Aragon Court: \\\"missing\\\", \\\"leaked\\\", and \\\"refused\\\", respectively.\\r\\n    // This Arbitrable introduces the concept of the challenger/submitter (a binary outcome) as 3/4.\\r\\n    // Note that Aragon Court emits the lowest outcome in the event of a tie, and so for us, we prefer the challenger.\\r\\n    uint256 private constant DISPUTES_NOT_RULED = 0;\\r\\n    uint256 private constant DISPUTES_RULING_CHALLENGER = 3;\\r\\n    uint256 private constant DISPUTES_RULING_SUBMITTER = 4;\\r\\n\\r\\n    enum State {\\r\\n        NOT_DISPUTED,\\r\\n        DISPUTED,\\r\\n        DISPUTES_NOT_RULED,\\r\\n        DISPUTES_RULING_CHALLENGER,\\r\\n        DISPUTES_RULING_SUBMITTER\\r\\n    }\\r\\n\\r\\n    struct Dispute {\\r\\n        address subject;\\r\\n        State state;\\r\\n    }\\r\\n\\r\\n    GovernERC20 public feeToken;\\r\\n    uint256 public feeAmount;\\r\\n    uint256 public currentId;\\r\\n    address public owner;\\r\\n    mapping(uint256 => Dispute) public disputes;\\r\\n    address disputeManager;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"ERR:NOT_OWNER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(GovernERC20 _feeToken, uint256 _feeAmount) public {\\r\\n        owner = msg.sender;\\r\\n        feeToken = _feeToken;\\r\\n        feeAmount = _feeAmount;\\r\\n        disputeManager = address(new DisputeManager(address(this)));\\r\\n    }\\r\\n\\r\\n    function setOwner(address _owner) public onlyOwner {\\r\\n        owner = _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Create a dispute over the Arbitrable sender with a number of possible rulings\\r\\n     * @param _possibleRulings Number of possible rulings allowed for the dispute\\r\\n     * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\\r\\n     * @return Dispute identification number\\r\\n     */\\r\\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata)\\r\\n        external\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 disputeId = currentId;\\r\\n        disputes[disputeId] = Dispute(msg.sender, State.DISPUTED);\\r\\n        currentId++;\\r\\n\\r\\n        require(\\r\\n            feeToken.safeTransferFrom(msg.sender, address(this), feeAmount),\\r\\n            \\\"ERR:DEPOSIT_FAILED\\\"\\r\\n        );\\r\\n        return disputeId;\\r\\n    }\\r\\n\\r\\n    function decideDispute(uint256 _disputeId, State _state)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        require(\\r\\n            _state != State.NOT_DISPUTED && _state != State.DISPUTED,\\r\\n            \\\"ERR:OUTCOME_NOT_ASSIGNABLE\\\"\\r\\n        );\\r\\n\\r\\n        Dispute storage dispute = disputes[_disputeId];\\r\\n        require(dispute.state == State.DISPUTED, \\\"ERR:NOT_DISPUTED\\\");\\r\\n\\r\\n        dispute.state = _state;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Submit evidence for a dispute\\r\\n     * @param _disputeId Id of the dispute in the Protocol\\r\\n     * @param _submitter Address of the account submitting the evidence\\r\\n     * @param _evidence Data submitted for the evidence related to the dispute\\r\\n     */\\r\\n    function submitEvidence(\\r\\n        uint256 _disputeId,\\r\\n        address _submitter,\\r\\n        bytes calldata _evidence\\r\\n    ) external {}\\r\\n\\r\\n    /**\\r\\n     * @dev Close the evidence period of a dispute\\r\\n     * @param _disputeId Identification number of the dispute to close its evidence submitting period\\r\\n     */\\r\\n    function closeEvidencePeriod(uint256 _disputeId) external {}\\r\\n\\r\\n    /**\\r\\n     * @notice Rule dispute #`_disputeId` if ready\\r\\n     * @param _disputeId Identification number of the dispute to be ruled\\r\\n     * @return subject Arbitrable instance associated to the dispute\\r\\n     * @return ruling Ruling number computed for the given dispute\\r\\n     */\\r\\n    function rule(uint256 _disputeId)\\r\\n        external\\r\\n        returns (address subject, uint256 ruling)\\r\\n    {\\r\\n        Dispute storage dispute = disputes[_disputeId];\\r\\n\\r\\n        if (dispute.state == State.DISPUTES_RULING_CHALLENGER) {\\r\\n            return (dispute.subject, DISPUTES_RULING_CHALLENGER);\\r\\n        } else if (dispute.state == State.DISPUTES_RULING_SUBMITTER) {\\r\\n            return (dispute.subject, DISPUTES_RULING_SUBMITTER);\\r\\n        } else if (dispute.state == State.DISPUTES_NOT_RULED) {\\r\\n            return (dispute.subject, DISPUTES_NOT_RULED);\\r\\n        } else {\\r\\n            revert();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tell the dispute fees information to create a dispute\\r\\n     * @return recipient Address where the corresponding dispute fees must be transferred to\\r\\n     * @return feeToken ERC20 token used for the fees\\r\\n     * @return feeAmount Total amount of fees that must be allowed to the recipient\\r\\n     */\\r\\n    function getDisputeFees()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            GovernERC20,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        return (address(this), feeToken, feeAmount);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DisputeManager {\\r\\n    using SafeGovernERC20 for GovernERC20;\\r\\n\\r\\n    OwnableCeleste celeste;\\r\\n\\r\\n    uint256 private constant DISPUTES_NOT_RULED = 0;\\r\\n    uint256 private constant DISPUTES_RULING_CHALLENGER = 3;\\r\\n    uint256 private constant DISPUTES_RULING_SUBMITTER = 4;\\r\\n\\r\\n    enum State {\\r\\n        NOT_DISPUTED,\\r\\n        DISPUTED,\\r\\n        DISPUTES_NOT_RULED,\\r\\n        DISPUTES_RULING_CHALLENGER,\\r\\n        DISPUTES_RULING_SUBMITTER\\r\\n    }\\r\\n\\r\\n    constructor(address mockCelesteAddress) public {\\r\\n        celeste = OwnableCeleste(mockCelesteAddress);\\r\\n    }\\r\\n\\r\\n    function getDisputeFees() external view returns (GovernERC20, uint256) {\\r\\n        (address celeste, GovernERC20 feeToken, uint256 feeAmount) = celeste\\r\\n            .getDisputeFees();\\r\\n        return (feeToken, feeAmount);\\r\\n    }\\r\\n\\r\\n    function getDispute(uint256 _disputeId)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address subject,\\r\\n            uint8 possibleRulings,\\r\\n            OwnableCeleste.State state,\\r\\n            uint8 finalRuling,\\r\\n            uint256 lastRoundId,\\r\\n            uint64 createTermId\\r\\n        )\\r\\n    {\\r\\n        (address subject, OwnableCeleste.State state) = celeste.disputes(\\r\\n            _disputeId\\r\\n        );\\r\\n        return (subject, 0, state, 0, 0, 0);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xaa81523d31fc17c9236ef601be7f0a9ca2ff6912d65f1c770a37eddc5f1b719a\"}},\"version\":1}",
          "userdoc": {
            "methods": {
              "rule(uint256)": {
                "notice": "Rule dispute #`_disputeId` if ready\r"
              }
            }
          },
          "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"contracts/mocks/OwnableCelesteMock.sol\": {\n      \"content\": \"/**\\r\\n *Submitted for verification at Etherscan.io on 2022-01-07\\r\\n */\\r\\n\\r\\n// Brought from https://github.com/aragon/aragonOS/blob/v4.3.0/contracts/lib/token/ERC20.sol\\r\\n// Adapted to use pragma ^0.5.8 and satisfy our linter rules\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\ncontract GovernERC20 {\\r\\n    function totalSupply() public view returns (uint256);\\r\\n\\r\\n    function balanceOf(address _who) public view returns (uint256);\\r\\n\\r\\n    function allowance(address _owner, address _spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n// File: contracts/arbitration/IArbitrator.sol\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\ninterface IArbitrator {\\r\\n    /**\\r\\n     * @dev Create a dispute over the Arbitrable sender with a number of possible rulings\\r\\n     * @param _possibleRulings Number of possible rulings allowed for the dispute\\r\\n     * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\\r\\n     * @return Dispute identification number\\r\\n     */\\r\\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata)\\r\\n        external\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Submit evidence for a dispute\\r\\n     * @param _disputeId Id of the dispute in the Protocol\\r\\n     * @param _submitter Address of the account submitting the evidence\\r\\n     * @param _evidence Data submitted for the evidence related to the dispute\\r\\n     */\\r\\n    function submitEvidence(\\r\\n        uint256 _disputeId,\\r\\n        address _submitter,\\r\\n        bytes calldata _evidence\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Close the evidence period of a dispute\\r\\n     * @param _disputeId Identification number of the dispute to close its evidence submitting period\\r\\n     */\\r\\n    function closeEvidencePeriod(uint256 _disputeId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rule dispute #`_disputeId` if ready\\r\\n     * @param _disputeId Identification number of the dispute to be ruled\\r\\n     * @return subject Arbitrable instance associated to the dispute\\r\\n     * @return ruling Ruling number computed for the given dispute\\r\\n     */\\r\\n    function rule(uint256 _disputeId)\\r\\n        external\\r\\n        returns (address subject, uint256 ruling);\\r\\n\\r\\n    /**\\r\\n     * @dev Tell the dispute fees information to create a dispute\\r\\n     * @return recipient Address where the corresponding dispute fees must be transferred to\\r\\n     * @return feeToken ERC20 token used for the fees\\r\\n     * @return feeAmount Total amount of fees that must be allowed to the recipient\\r\\n     */\\r\\n    function getDisputeFees()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address recipient,\\r\\n            GovernERC20 feeToken,\\r\\n            uint256 feeAmount\\r\\n        );\\r\\n}\\r\\n\\r\\n// File: contracts/lib/os/SafeERC20.sol\\r\\n\\r\\n// Brought from https://github.com/aragon/aragonOS/blob/v4.3.0/contracts/common/SafeERC20.sol\\r\\n// Adapted to use pragma ^0.5.8 and satisfy our linter rules\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\nlibrary SafeGovernERC20 {\\r\\n    // Before 0.5, solidity has a mismatch between `address.transfer()` and `token.transfer()`:\\r\\n    // https://github.com/ethereum/solidity/issues/3544\\r\\n    bytes4 private constant TRANSFER_SELECTOR = 0xa9059cbb;\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.transfer() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeTransfer(\\r\\n        GovernERC20 _token,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory transferCallData = abi.encodeWithSelector(\\r\\n            TRANSFER_SELECTOR,\\r\\n            _to,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), transferCallData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.transferFrom() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeTransferFrom(\\r\\n        GovernERC20 _token,\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory transferFromCallData = abi.encodeWithSelector(\\r\\n            _token.transferFrom.selector,\\r\\n            _from,\\r\\n            _to,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), transferFromCallData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as a standards-compliant ERC20.approve() that never reverts (returns false).\\r\\n     *      Note that this makes an external call to the token.\\r\\n     */\\r\\n    function safeApprove(\\r\\n        GovernERC20 _token,\\r\\n        address _spender,\\r\\n        uint256 _amount\\r\\n    ) internal returns (bool) {\\r\\n        bytes memory approveCallData = abi.encodeWithSelector(\\r\\n            _token.approve.selector,\\r\\n            _spender,\\r\\n            _amount\\r\\n        );\\r\\n        return invokeAndCheckSuccess(address(_token), approveCallData);\\r\\n    }\\r\\n\\r\\n    function invokeAndCheckSuccess(address _addr, bytes memory _calldata)\\r\\n        private\\r\\n        returns (bool)\\r\\n    {\\r\\n        bool ret;\\r\\n        assembly {\\r\\n            let ptr := mload(0x40) // free memory pointer\\r\\n\\r\\n            let success := call(\\r\\n                gas, // forward all gas\\r\\n                _addr, // address\\r\\n                0, // no value\\r\\n                add(_calldata, 0x20), // calldata start\\r\\n                mload(_calldata), // calldata length\\r\\n                ptr, // write output over free memory\\r\\n                0x20 // uint256 return\\r\\n            )\\r\\n\\r\\n            if gt(success, 0) {\\r\\n                // Check number of bytes returned from last function call\\r\\n                switch returndatasize\\r\\n                // No bytes returned: assume success\\r\\n                case 0 {\\r\\n                    ret := 1\\r\\n                }\\r\\n                // 32 bytes returned: check if non-zero\\r\\n                case 0x20 {\\r\\n                    // Only return success if returned data was true\\r\\n                    // Already have output in ptr\\r\\n                    ret := eq(mload(ptr), 1)\\r\\n                }\\r\\n                // Not sure what was returned: don't mark as success\\r\\n                default {\\r\\n\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/ownable-celeste/OwnableCeleste.sol\\r\\n\\r\\npragma solidity ^0.5.8;\\r\\n\\r\\ncontract OwnableCeleste is IArbitrator {\\r\\n    using SafeGovernERC20 for GovernERC20;\\r\\n\\r\\n    // Note that Aragon Court treats the possible outcomes as arbitrary numbers, leaving the Arbitrable (us) to define how to understand them.\\r\\n    // Some outcomes [0, 1, and 2] are reserved by Aragon Court: \\\"missing\\\", \\\"leaked\\\", and \\\"refused\\\", respectively.\\r\\n    // This Arbitrable introduces the concept of the challenger/submitter (a binary outcome) as 3/4.\\r\\n    // Note that Aragon Court emits the lowest outcome in the event of a tie, and so for us, we prefer the challenger.\\r\\n    uint256 private constant DISPUTES_NOT_RULED = 0;\\r\\n    uint256 private constant DISPUTES_RULING_CHALLENGER = 3;\\r\\n    uint256 private constant DISPUTES_RULING_SUBMITTER = 4;\\r\\n\\r\\n    enum State {\\r\\n        NOT_DISPUTED,\\r\\n        DISPUTED,\\r\\n        DISPUTES_NOT_RULED,\\r\\n        DISPUTES_RULING_CHALLENGER,\\r\\n        DISPUTES_RULING_SUBMITTER\\r\\n    }\\r\\n\\r\\n    struct Dispute {\\r\\n        address subject;\\r\\n        State state;\\r\\n    }\\r\\n\\r\\n    GovernERC20 public feeToken;\\r\\n    uint256 public feeAmount;\\r\\n    uint256 public currentId;\\r\\n    address public owner;\\r\\n    mapping(uint256 => Dispute) public disputes;\\r\\n    address disputeManager;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"ERR:NOT_OWNER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(GovernERC20 _feeToken, uint256 _feeAmount) public {\\r\\n        owner = msg.sender;\\r\\n        feeToken = _feeToken;\\r\\n        feeAmount = _feeAmount;\\r\\n        disputeManager = address(new DisputeManager(address(this)));\\r\\n    }\\r\\n\\r\\n    function setOwner(address _owner) public onlyOwner {\\r\\n        owner = _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Create a dispute over the Arbitrable sender with a number of possible rulings\\r\\n     * @param _possibleRulings Number of possible rulings allowed for the dispute\\r\\n     * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\\r\\n     * @return Dispute identification number\\r\\n     */\\r\\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata)\\r\\n        external\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 disputeId = currentId;\\r\\n        disputes[disputeId] = Dispute(msg.sender, State.DISPUTED);\\r\\n        currentId++;\\r\\n\\r\\n        require(\\r\\n            feeToken.safeTransferFrom(msg.sender, address(this), feeAmount),\\r\\n            \\\"ERR:DEPOSIT_FAILED\\\"\\r\\n        );\\r\\n        return disputeId;\\r\\n    }\\r\\n\\r\\n    function decideDispute(uint256 _disputeId, State _state)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        require(\\r\\n            _state != State.NOT_DISPUTED && _state != State.DISPUTED,\\r\\n            \\\"ERR:OUTCOME_NOT_ASSIGNABLE\\\"\\r\\n        );\\r\\n\\r\\n        Dispute storage dispute = disputes[_disputeId];\\r\\n        require(dispute.state == State.DISPUTED, \\\"ERR:NOT_DISPUTED\\\");\\r\\n\\r\\n        dispute.state = _state;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Submit evidence for a dispute\\r\\n     * @param _disputeId Id of the dispute in the Protocol\\r\\n     * @param _submitter Address of the account submitting the evidence\\r\\n     * @param _evidence Data submitted for the evidence related to the dispute\\r\\n     */\\r\\n    function submitEvidence(\\r\\n        uint256 _disputeId,\\r\\n        address _submitter,\\r\\n        bytes calldata _evidence\\r\\n    ) external {}\\r\\n\\r\\n    /**\\r\\n     * @dev Close the evidence period of a dispute\\r\\n     * @param _disputeId Identification number of the dispute to close its evidence submitting period\\r\\n     */\\r\\n    function closeEvidencePeriod(uint256 _disputeId) external {}\\r\\n\\r\\n    /**\\r\\n     * @notice Rule dispute #`_disputeId` if ready\\r\\n     * @param _disputeId Identification number of the dispute to be ruled\\r\\n     * @return subject Arbitrable instance associated to the dispute\\r\\n     * @return ruling Ruling number computed for the given dispute\\r\\n     */\\r\\n    function rule(uint256 _disputeId)\\r\\n        external\\r\\n        returns (address subject, uint256 ruling)\\r\\n    {\\r\\n        Dispute storage dispute = disputes[_disputeId];\\r\\n\\r\\n        if (dispute.state == State.DISPUTES_RULING_CHALLENGER) {\\r\\n            return (dispute.subject, DISPUTES_RULING_CHALLENGER);\\r\\n        } else if (dispute.state == State.DISPUTES_RULING_SUBMITTER) {\\r\\n            return (dispute.subject, DISPUTES_RULING_SUBMITTER);\\r\\n        } else if (dispute.state == State.DISPUTES_NOT_RULED) {\\r\\n            return (dispute.subject, DISPUTES_NOT_RULED);\\r\\n        } else {\\r\\n            revert();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tell the dispute fees information to create a dispute\\r\\n     * @return recipient Address where the corresponding dispute fees must be transferred to\\r\\n     * @return feeToken ERC20 token used for the fees\\r\\n     * @return feeAmount Total amount of fees that must be allowed to the recipient\\r\\n     */\\r\\n    function getDisputeFees()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            GovernERC20,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        return (address(this), feeToken, feeAmount);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DisputeManager {\\r\\n    using SafeGovernERC20 for GovernERC20;\\r\\n\\r\\n    OwnableCeleste celeste;\\r\\n\\r\\n    uint256 private constant DISPUTES_NOT_RULED = 0;\\r\\n    uint256 private constant DISPUTES_RULING_CHALLENGER = 3;\\r\\n    uint256 private constant DISPUTES_RULING_SUBMITTER = 4;\\r\\n\\r\\n    enum State {\\r\\n        NOT_DISPUTED,\\r\\n        DISPUTED,\\r\\n        DISPUTES_NOT_RULED,\\r\\n        DISPUTES_RULING_CHALLENGER,\\r\\n        DISPUTES_RULING_SUBMITTER\\r\\n    }\\r\\n\\r\\n    constructor(address mockCelesteAddress) public {\\r\\n        celeste = OwnableCeleste(mockCelesteAddress);\\r\\n    }\\r\\n\\r\\n    function getDisputeFees() external view returns (GovernERC20, uint256) {\\r\\n        (address celeste, GovernERC20 feeToken, uint256 feeAmount) = celeste\\r\\n            .getDisputeFees();\\r\\n        return (feeToken, feeAmount);\\r\\n    }\\r\\n\\r\\n    function getDispute(uint256 _disputeId)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address subject,\\r\\n            uint8 possibleRulings,\\r\\n            OwnableCeleste.State state,\\r\\n            uint8 finalRuling,\\r\\n            uint256 lastRoundId,\\r\\n            uint64 createTermId\\r\\n        )\\r\\n    {\\r\\n        (address subject, OwnableCeleste.State state) = celeste.disputes(\\r\\n            _disputeId\\r\\n        );\\r\\n        return (subject, 0, state, 0, 0, 0);\\r\\n    }\\r\\n}\\r\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
          "solcInputHash": "c3f2afeb451f4539dc32f09e1b433c35",
          "transactionHash": "0x45167ecdbb347fb034c9f565fb61a12766294be7debb3228eda6e574bcede635",
          "args": [
            "0x3050E20FAbE19f8576865811c9F28e85b96Fa4f9",
            {
              "type": "BigNumber",
              "hex": "0xb1a2bc2ec50000"
            }
          ],
          "address": "0x9BDF4F559911deE327f6b9d1657aA8e7516041E4",
          "receipt": {
            "to": null,
            "from": "0x91B0d67D3F47A30FBEeB159E67209Ad6cb2cE22E",
            "contractAddress": "0x9BDF4F559911deE327f6b9d1657aA8e7516041E4",
            "transactionIndex": 0,
            "gasUsed": {
              "type": "BigNumber",
              "hex": "0x115113"
            },
            "logsBloom": "0x
            "blockHash": "0x69ce0eca09506107f4a6120f67856af6e2636512a2584c176561ac6ff0bb6337",
            "transactionHash": "0x45167ecdbb347fb034c9f565fb61a12766294be7debb3228eda6e574bcede635",
            "logs": [],
            "blockNumber": 10764155,
            "confirmations": 1,
            "cumulativeGasUsed": {
              "type": "BigNumber",
              "hex": "0x115113"
            },
            "effectiveGasPrice": {
              "type": "BigNumber",
              "hex": "0x09502f9000"
            },
            "status": 1,
            "type": 0,
            "byzantium": true
          },
          "newlyDeployed": true
        }
      }
    }
  }
}