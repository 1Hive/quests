name: E2E
on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]
jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      # - name: Install dependencies
      #   run: yarn ci
      #   shell: bash
      # - name: Install xvfb
      #   run: sudo apt-get install xvfb
      - name: Resolving deployment url from Vercel
        uses: wei/curl@v1
        with:
          args: -H 'Accept: application/json' -H 'Content-Type: application/json' -H 'Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}' https://api.zeit.co/v5/now/deployments?teamId=${{ secrets.VERCEL_TEAM_ID }}$&projectId=${{ secrets.VERCEL_PROJECT_ID }}
      # Wait for deployment to be ready, before running E2E (otherwise Cypress might start testing too early, and gets redirected to Vercel's "Login page", and tests fail)
      - name: Awaiting Vercel deployment to be ready
        uses: UnlyEd/github-action-await-vercel@v1.1.1
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEl_TOKEN }}
        with:
          deployment-url: ${{ env.VERCEL_DEPLOYMENT }} # Must only contain the domain name (no http prefix, etc.)
          timeout: 900 # Wait for 15 minutes before failing
      - name: Display deployment status
        run: "echo My deployment is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}"

      - name: Run E2E test
        env:
          E2E_SECRET_WORDS: ${{secrets.E2E_SECRET_WORDS}}
          VERCEL_DEPLOYMENT_URL: ${{ env.VERCEL_DEPLOYMENT }}
        run: xvfb-run --auto-servernum yarn e2e
